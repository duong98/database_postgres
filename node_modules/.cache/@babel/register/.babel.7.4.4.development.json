{
  "{\"sourceRoot\":\"/home/duong/Documents/database_project/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/duong/Documents/database_project\",\"filename\":\"/home/duong/Documents/database_project/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/duong/Documents/database_project\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/duong/Documents/database_project/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/duong/Documents/database_project",
      "filename": "/home/duong/Documents/database_project/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/duong/Documents/database_project",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/duong/Documents/database_project/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/duong/Documents/database_project/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/duong/Documents/database_project/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _Controllerdb = _interopRequireDefault(require(\"./Controllerdb\"));\n\nvar _Authdonor = _interopRequireDefault(require(\"./Auth/Authdonor\"));\n\nvar _Authhospital = _interopRequireDefault(require(\"./Auth/Authhospital\"));\n\nvar _Authbanks = _interopRequireDefault(require(\"./Auth/Authbanks\"));\n\nvar _Authadmin = _interopRequireDefault(require(\"./Auth/Authadmin\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\nvar app = (0, _express[\"default\"])();\napp.use(_express[\"default\"].json());\napp.get('/', function (req, res) {\n  return res.status(200).send({\n    'message': 'YAY! Congratulations! Your first endpoint is working'\n  });\n});\napp.post('/donor/signup', _Controllerdb[\"default\"].create);\napp.post('/donor/login', _Controllerdb[\"default\"].login);\napp.get('/donor', _Authdonor[\"default\"].verifyToken, _Controllerdb[\"default\"].profile);\napp.get('/donor/banks', _Authdonor[\"default\"].verifyToken, _Controllerdb[\"default\"].dgetbanks);\napp.get('/donor/history', _Authdonor[\"default\"].verifyToken, _Controllerdb[\"default\"].history);\napp.put('/donor', _Authdonor[\"default\"].verifyToken, _Controllerdb[\"default\"].edit);\napp.post('/donor', _Authdonor[\"default\"].verifyToken, _Controllerdb[\"default\"].donate);\napp.post('/bank/login', _Controllerdb[\"default\"].blogin);\napp.get('/bank', _Authbanks[\"default\"].verifyToken, _Controllerdb[\"default\"].bprofile);\napp.get('/bank/donors', _Authbanks[\"default\"].verifyToken, _Controllerdb[\"default\"].getdonors);\napp[\"delete\"]('/bank/donors/:donorid', _Authbanks[\"default\"].verifyToken, _Controllerdb[\"default\"].deletedonors);\napp.get('/bank/donate', _Authbanks[\"default\"].verifyToken, _Controllerdb[\"default\"].listdonate);\napp.put('/bank/donate/:donate_id', _Authbanks[\"default\"].verifyToken, _Controllerdb[\"default\"].handledonate);\napp.get('/bank/store', _Authbanks[\"default\"].verifyToken, _Controllerdb[\"default\"].getstores);\napp.put('/bank/store/:donate_id', _Authbanks[\"default\"].verifyToken, _Controllerdb[\"default\"].stores);\napp.get('/bank/bloodstore', _Authbanks[\"default\"].verifyToken, _Controllerdb[\"default\"].bloodstores);\napp.get('/bank/order', _Authbanks[\"default\"].verifyToken, _Controllerdb[\"default\"].bgetorder);\napp.get('/bank/handleorder', _Authbanks[\"default\"].verifyToken, _Controllerdb[\"default\"].gethandleorder);\napp.put('/bank/handleorder/:orderid', _Authbanks[\"default\"].verifyToken, _Controllerdb[\"default\"].handleorder);\napp.post('/hospital/login', _Controllerdb[\"default\"].hlogin);\napp.get('/hospital', _Authhospital[\"default\"].verifyToken, _Controllerdb[\"default\"].hprofile);\napp.get('/hospital/order', _Authhospital[\"default\"].verifyToken, _Controllerdb[\"default\"].hgetorder);\napp.post('/hospital/order', _Authhospital[\"default\"].verifyToken, _Controllerdb[\"default\"].order);\napp.put('/hospital/order/:orderid', _Authhospital[\"default\"].verifyToken, _Controllerdb[\"default\"].editorder);\napp[\"delete\"]('/hospital/order/:orderid', _Authhospital[\"default\"].verifyToken, _Controllerdb[\"default\"].deleteorder);\napp.post('/admin/login', _Controllerdb[\"default\"].alogin);\napp.post('/admin/addbank', _Authadmin[\"default\"].verifyToken, _Controllerdb[\"default\"].addbank);\napp.get('/admin/banks', _Authadmin[\"default\"].verifyToken, _Controllerdb[\"default\"].getbanks);\napp[\"delete\"]('/admin/banks/:bankid', _Authadmin[\"default\"].verifyToken, _Controllerdb[\"default\"].deletebanks);\napp.post('/admin/addhospital', _Authadmin[\"default\"].verifyToken, _Controllerdb[\"default\"].addhospital);\napp.get('/admin/hospitals', _Authadmin[\"default\"].verifyToken, _Controllerdb[\"default\"].gethospitals);\napp[\"delete\"]('/admin/hospitals/:hospitalid', _Authadmin[\"default\"].verifyToken, _Controllerdb[\"default\"].deletehospitals);\napp.listen(process.env.PORT, function () {\n  console.log(\"App running on port \".concat(process.env.PORT, \".\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "dotenv",
        "config",
        "app",
        "use",
        "express",
        "json",
        "get",
        "req",
        "res",
        "status",
        "send",
        "post",
        "Controllerdb",
        "create",
        "login",
        "Authdonor",
        "verifyToken",
        "profile",
        "dgetbanks",
        "history",
        "put",
        "edit",
        "donate",
        "blogin",
        "Authbanks",
        "bprofile",
        "getdonors",
        "deletedonors",
        "listdonate",
        "handledonate",
        "getstores",
        "stores",
        "bloodstores",
        "bgetorder",
        "gethandleorder",
        "handleorder",
        "hlogin",
        "Authhospital",
        "hprofile",
        "hgetorder",
        "order",
        "editorder",
        "deleteorder",
        "alogin",
        "Authadmin",
        "addbank",
        "getbanks",
        "deletebanks",
        "addhospital",
        "gethospitals",
        "deletehospitals",
        "listen",
        "process",
        "env",
        "PORT",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/home/duong/Documents/database_project/src",
      "sourcesContent": [
        "import express from 'express';\nimport dotenv from 'dotenv';\nimport Controllerdb from './Controllerdb';\nimport Authdonor from './Auth/Authdonor';\nimport Authhospital from './Auth/Authhospital';\nimport Authbanks from './Auth/Authbanks';\nimport Authadmin from './Auth/Authadmin';\ndotenv.config();\nconst app = express()\napp.use(express.json())\napp.get('/', (req, res) => {\n    return res.status(200).send({'message': 'YAY! Congratulations! Your first endpoint is working'});\n  });\napp.post('/donor/signup', Controllerdb.create);\napp.post('/donor/login',Controllerdb.login);\napp.get('/donor',Authdonor.verifyToken,Controllerdb.profile);\napp.get('/donor/banks',Authdonor.verifyToken,Controllerdb.dgetbanks);\napp.get('/donor/history',Authdonor.verifyToken,Controllerdb.history);\napp.put('/donor',Authdonor.verifyToken, Controllerdb.edit);\napp.post('/donor',Authdonor.verifyToken,Controllerdb.donate);\napp.post('/bank/login',Controllerdb.blogin);\napp.get('/bank',Authbanks.verifyToken,Controllerdb.bprofile);\napp.get('/bank/donors', Authbanks.verifyToken, Controllerdb.getdonors);  \napp.delete('/bank/donors/:donorid', Authbanks.verifyToken, Controllerdb.deletedonors);\napp.get('/bank/donate', Authbanks.verifyToken,Controllerdb.listdonate);\napp.put('/bank/donate/:donate_id', Authbanks.verifyToken,Controllerdb.handledonate)  \napp.get('/bank/store',Authbanks.verifyToken,Controllerdb.getstores);\napp.put('/bank/store/:donate_id',Authbanks.verifyToken,Controllerdb.stores);\napp.get('/bank/bloodstore',Authbanks.verifyToken,Controllerdb.bloodstores);\napp.get('/bank/order',Authbanks.verifyToken,Controllerdb.bgetorder);\napp.get('/bank/handleorder',Authbanks.verifyToken,Controllerdb.gethandleorder);\napp.put('/bank/handleorder/:orderid',Authbanks.verifyToken,Controllerdb.handleorder);\napp.post('/hospital/login',Controllerdb.hlogin);\napp.get('/hospital',Authhospital.verifyToken,Controllerdb.hprofile);\napp.get('/hospital/order',Authhospital.verifyToken,Controllerdb.hgetorder);\napp.post('/hospital/order',Authhospital.verifyToken,Controllerdb.order);\napp.put('/hospital/order/:orderid',Authhospital.verifyToken,Controllerdb.editorder);\napp.delete('/hospital/order/:orderid',Authhospital.verifyToken,Controllerdb.deleteorder);\napp.post('/admin/login',Controllerdb.alogin);\napp.post('/admin/addbank',Authadmin.verifyToken,Controllerdb.addbank);\napp.get('/admin/banks',Authadmin.verifyToken,Controllerdb.getbanks);\napp.delete('/admin/banks/:bankid',Authadmin.verifyToken,Controllerdb.deletebanks);  \napp.post('/admin/addhospital',Authadmin.verifyToken,Controllerdb.addhospital);\napp.get('/admin/hospitals',Authadmin.verifyToken,Controllerdb.gethospitals);\napp.delete('/admin/hospitals/:hospitalid',Authadmin.verifyToken,Controllerdb.deletehospitals);  \napp.listen(process.env.PORT, () => {\n    console.log(`App running on port ${process.env.PORT}.`)\n  })"
      ]
    },
    "sourceType": "script",
    "mtime": 1560347408372
  },
  "{\"sourceRoot\":\"/home/duong/Documents/database_project/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/duong/Documents/database_project\",\"filename\":\"/home/duong/Documents/database_project/src/Controllerdb.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/duong/Documents/database_project\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/duong/Documents/database_project/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/duong/Documents/database_project",
      "filename": "/home/duong/Documents/database_project/src/Controllerdb.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/duong/Documents/database_project",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/duong/Documents/database_project/src/Controllerdb.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/duong/Documents/database_project/src/Controllerdb.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/duong/Documents/database_project/src",
        "sourceFileName": "Controllerdb.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _v = _interopRequireDefault(require(\"uuid/v4\"));\n\nvar _db = _interopRequireDefault(require(\"./db\"));\n\nvar _Helper = _interopRequireDefault(require(\"./Helper\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Controllerdb = {\n  /**\n   * Create A donor\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} reflection object\n   */\n  create: function () {\n    var _create = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(req, res) {\n      var hashPassword, createQuery, values, _ref, rows;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!req.body.email || !req.body.password)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.status(400).send({\n                'message': 'Some values are missing'\n              }));\n\n            case 2:\n              if (_Helper[\"default\"].isValidEmail(req.body.email)) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.status(400).send({\n                'message': 'Please enter a valid email address'\n              }));\n\n            case 4:\n              hashPassword = _Helper[\"default\"].hashPassword(req.body.password);\n              createQuery = 'Insert into donors(id,first_name,last_name, email, password, DateOfBirth,blood_type, gender, address, contact_no) VALUES($1, $2, $3, $4, $5, $6, $7, $8, $9, $10) returning *';\n              values = [(0, _v[\"default\"])(), req.body.first_name, req.body.last_name, req.body.email, hashPassword, req.body.DateOfBirth, req.body.blood_type, req.body.gender, req.body.address, req.body.contact_no];\n              _context.prev = 7;\n              _context.next = 10;\n              return _db[\"default\"].query(createQuery, values);\n\n            case 10:\n              _ref = _context.sent;\n              rows = _ref.rows;\n\n              if (!rows[0]) {\n                _context.next = 14;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.status(200).send({\n                'Message': 'signup successful'\n              }));\n\n            case 14:\n              _context.next = 21;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](7);\n\n              if (!(_context.t0.routine === \"_bt_check_unique\")) {\n                _context.next = 20;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.status(400).send({\n                'message': 'Donor with that EMAIL already exist'\n              }));\n\n            case 20:\n              return _context.abrupt(\"return\", res.status(400).send(_context.t0));\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[7, 16]]);\n    }));\n\n    function create(_x, _x2) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n\n  /**\n   * Login\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} Donor object\n   */\n  login: function () {\n    var _login = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(req, res) {\n      var text, _ref2, rows, token;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(!req.body.email || !req.body.password)) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", res.status(400).send({\n                'message': 'Some values are missing'\n              }));\n\n            case 2:\n              if (_Helper[\"default\"].isValidEmail(req.body.email)) {\n                _context2.next = 4;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", res.status(400).send({\n                'message': 'Please enter a valid email address'\n              }));\n\n            case 4:\n              text = 'SELECT * FROM donors WHERE email = $1';\n              _context2.prev = 5;\n              _context2.next = 8;\n              return _db[\"default\"].query(text, [req.body.email]);\n\n            case 8:\n              _ref2 = _context2.sent;\n              rows = _ref2.rows;\n\n              if (rows[0]) {\n                _context2.next = 12;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", res.status(400).send({\n                'message': 'The credentials you provided is incorrect'\n              }));\n\n            case 12:\n              if (_Helper[\"default\"].comparePassword(rows[0].password, req.body.password)) {\n                _context2.next = 14;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", res.status(400).send({\n                'message': 'The credentials you provided is incorrect'\n              }));\n\n            case 14:\n              token = _Helper[\"default\"].generateToken(rows[0].id);\n              return _context2.abrupt(\"return\", res.status(200).send({\n                token: token\n              }));\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](5);\n              return _context2.abrupt(\"return\", res.status(400).send(_context2.t0));\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[5, 18]]);\n    }));\n\n    function login(_x3, _x4) {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }(),\n\n  /**\n   * Delete A donor\n   * @param {object} req\n   * @param {object} res\n   * @returns {void} return status code 204\n   */\n\n  /*async delete(req, res) {\n    const deleteQuery = \"DELETE FROM donor WHERE id=$1 returning *\";\n    try {\n      const { rows } = await db.query(deleteQuery, [req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'donor not found' });\n      }\n      return res.status(204).send({ 'message': 'deleted' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },*/\n  profile: function () {\n    var _profile = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(req, res) {\n      var profileQuery, _ref3, rows;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              profileQuery = 'Select * FROM donors WHERE id=$1';\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _db[\"default\"].query(profileQuery, [req.user.id]);\n\n            case 4:\n              _ref3 = _context3.sent;\n              rows = _ref3.rows;\n\n              if (rows[0]) {\n                _context3.next = 10;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", res.status(404).send({\n                'message': 'donor not found'\n              }));\n\n            case 10:\n              return _context3.abrupt(\"return\", res.status(200).json(rows[0]));\n\n            case 11:\n              _context3.next = 16;\n              break;\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](1);\n              return _context3.abrupt(\"return\", res.status(400).send(_context3.t0));\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 13]]);\n    }));\n\n    function profile(_x5, _x6) {\n      return _profile.apply(this, arguments);\n    }\n\n    return profile;\n  }(),\n  edit: function () {\n    var _edit = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(req, res) {\n      var editQuery, values0, _ref4, rows;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (req.body.email) {\n                _context4.next = 2;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", res.status(400).send({\n                'message': 'Some values are missing'\n              }));\n\n            case 2:\n              if (_Helper[\"default\"].isValidEmail(req.body.email)) {\n                _context4.next = 4;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", res.status(400).send({\n                'message': 'Please enter a valid email address'\n              }));\n\n            case 4:\n              editQuery = \"Update donors set first_name=$1,last_name=$2, email=$3, DateOfBirth=$4,blood_type=$5, gender=$6, address=$7, contact_no=$8 where id=$9 returning *\";\n              values0 = [req.body.first_name, req.body.last_name, req.body.email, req.body.DateOfBirth, req.body.blood_type, req.body.gender, req.body.address, req.body.contact_no, req.user.id];\n              _context4.prev = 6;\n              _context4.next = 9;\n              return _db[\"default\"].query(editQuery, values0);\n\n            case 9:\n              _ref4 = _context4.sent;\n              rows = _ref4.rows;\n\n              if (rows[0]) {\n                _context4.next = 13;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", res.status(404).send({\n                'message': 'donor not found'\n              }));\n\n            case 13:\n              return _context4.abrupt(\"return\", res.status(200).send({\n                'message': 'updated'\n              }));\n\n            case 16:\n              _context4.prev = 16;\n              _context4.t0 = _context4[\"catch\"](6);\n              return _context4.abrupt(\"return\", res.status(400).send(_context4.t0));\n\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[6, 16]]);\n    }));\n\n    function edit(_x7, _x8) {\n      return _edit.apply(this, arguments);\n    }\n\n    return edit;\n  }(),\n  donate: function () {\n    var _donate = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(req, res) {\n      var donateQuery, checkstatusQuery, checkbankQuery, registerQuery, rows0, _ref5, rows, values1, values2, rows1;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(!req.body.DateOfDonate || !req.body.bank_name)) {\n                _context5.next = 2;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", res.status(400).send({\n                'message': 'Some values are missing'\n              }));\n\n            case 2:\n              donateQuery = \"Insert into blood(id,donor_id,bank_id,DateOfDonate) values ($1,$2,$3,$4) returning *\";\n              /* const checkdateQuery =\n                \"Select DateOfDonate,count(*) as k from blood where DateOfDonate=$1 group by DateOfDonate\";*/\n\n              checkstatusQuery = \"Select * from register where donor_id=$1 and bank_id=$2\";\n              checkbankQuery = \"Select * from BloodBank where name=$1\";\n              registerQuery = \"Insert into register(id,donor_id,bank_id,status) values($1,$2,$3,$4) returning *\";\n              _context5.prev = 6;\n              _context5.next = 9;\n              return _db[\"default\"].query(checkbankQuery, [req.body.bank_name]);\n\n            case 9:\n              rows0 = _context5.sent;\n\n              if (rows0.rows[0]) {\n                _context5.next = 12;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", res.status(404).send({\n                'message': 'bank name not found'\n              }));\n\n            case 12:\n              _context5.next = 14;\n              return _db[\"default\"].query(checkstatusQuery, [req.user.id, rows0.rows[0].id]);\n\n            case 14:\n              _ref5 = _context5.sent;\n              rows = _ref5.rows;\n\n              if (!rows[0]) {\n                _context5.next = 21;\n                break;\n              }\n\n              if (!(rows[0].status == \"B\")) {\n                _context5.next = 19;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", res.status(400).send({\n                'message': 'donors banned'\n              }));\n\n            case 19:\n              _context5.next = 24;\n              break;\n\n            case 21:\n              values1 = [(0, _v[\"default\"])(), req.user.id, rows0.rows[0].id, 'A'];\n              _context5.next = 24;\n              return _db[\"default\"].query(registerQuery, values1);\n\n            case 24:\n              /*\n              const rows0 = await db.query(checkdateQuery,[req.body.DateOfDonate]).rows;\n              if (rows0[0]) {\n                if (rows0[0].k > 1000)\n                  return res.status(400).send({ 'message': 'date not availabe,too many people' });\n                  */\n              values2 = [(0, _v[\"default\"])(), req.user.id, rows0.rows[0].id, req.body.DateOfDonate];\n              _context5.next = 27;\n              return _db[\"default\"].query(donateQuery, values2);\n\n            case 27:\n              rows1 = _context5.sent;\n\n              if (rows1.rows[0]) {\n                _context5.next = 30;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", res.status(404).send({\n                'message': 'donor not found'\n              }));\n\n            case 30:\n              return _context5.abrupt(\"return\", res.status(200).send({\n                'message': 'donate time setted'\n              }));\n\n            case 33:\n              _context5.prev = 33;\n              _context5.t0 = _context5[\"catch\"](6);\n              return _context5.abrupt(\"return\", res.status(400).send(_context5.t0));\n\n            case 36:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[6, 33]]);\n    }));\n\n    function donate(_x9, _x10) {\n      return _donate.apply(this, arguments);\n    }\n\n    return donate;\n  }(),\n  dgetbanks: function () {\n    var _dgetbanks = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(req, res) {\n      var getbanksQuery, _ref6, rows;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              getbanksQuery = \"Select name, address, email from BloodBank\";\n              _context6.prev = 1;\n              _context6.next = 4;\n              return _db[\"default\"].query(getbanksQuery);\n\n            case 4:\n              _ref6 = _context6.sent;\n              rows = _ref6.rows;\n\n              if (rows[0]) {\n                _context6.next = 8;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", res.status(404).send({\n                'message': 'banks record cannot be getted'\n              }));\n\n            case 8:\n              return _context6.abrupt(\"return\", res.status(200).json(rows));\n\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](1);\n              return _context6.abrupt(\"return\", res.status(400).send(_context6.t0));\n\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 11]]);\n    }));\n\n    function dgetbanks(_x11, _x12) {\n      return _dgetbanks.apply(this, arguments);\n    }\n\n    return dgetbanks;\n  }(),\n  history: function () {\n    var _history = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee7(req, res) {\n      var getbanksQuery, _ref7, rows;\n\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              getbanksQuery = \"Select DateOfDonate,Amount,name from blood inner join BloodBank on blood.bank_id=BloodBank.id where donor_id=$1 and amount is not null order by DateOfDonate\";\n              _context7.prev = 1;\n              _context7.next = 4;\n              return _db[\"default\"].query(getbanksQuery, [req.user.id]);\n\n            case 4:\n              _ref7 = _context7.sent;\n              rows = _ref7.rows;\n\n              if (rows[0]) {\n                _context7.next = 8;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", res.status(404).send({\n                'message': 'no record'\n              }));\n\n            case 8:\n              return _context7.abrupt(\"return\", res.status(200).json(rows));\n\n            case 11:\n              _context7.prev = 11;\n              _context7.t0 = _context7[\"catch\"](1);\n              return _context7.abrupt(\"return\", res.status(400).send(_context7.t0));\n\n            case 14:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[1, 11]]);\n    }));\n\n    function history(_x13, _x14) {\n      return _history.apply(this, arguments);\n    }\n\n    return history;\n  }(),\n  alogin: function () {\n    var _alogin = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(req, res) {\n      var text, _ref8, rows, token;\n\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!(!req.body.email || !req.body.password)) {\n                _context8.next = 2;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", res.status(400).send({\n                'message': 'Some values are missing'\n              }));\n\n            case 2:\n              text = \"SELECT * FROM admin WHERE email = $1\";\n              _context8.prev = 3;\n              _context8.next = 6;\n              return _db[\"default\"].query(text, [req.body.email]);\n\n            case 6:\n              _ref8 = _context8.sent;\n              rows = _ref8.rows;\n\n              if (rows[0]) {\n                _context8.next = 10;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", res.status(400).send({\n                'message': 'The credentials you provided is incorrect'\n              }));\n\n            case 10:\n              if (!(rows[0].password != req.body.password)) {\n                _context8.next = 12;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", res.status(400).send({\n                'message': 'The password you provided is incorrect'\n              }));\n\n            case 12:\n              token = _Helper[\"default\"].generateToken(rows[0].id);\n              return _context8.abrupt(\"return\", res.status(200).send({\n                token: token\n              }));\n\n            case 16:\n              _context8.prev = 16;\n              _context8.t0 = _context8[\"catch\"](3);\n              return _context8.abrupt(\"return\", res.status(400).send(_context8.t0));\n\n            case 19:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[3, 16]]);\n    }));\n\n    function alogin(_x15, _x16) {\n      return _alogin.apply(this, arguments);\n    }\n\n    return alogin;\n  }(),\n  addbank: function () {\n    var _addbank = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee9(req, res) {\n      var hashPassword, createQuery, values, _ref9, rows;\n\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              if (!(!req.body.email || !req.body.password)) {\n                _context9.next = 2;\n                break;\n              }\n\n              return _context9.abrupt(\"return\", res.status(400).send({\n                'message': 'Some values are missing'\n              }));\n\n            case 2:\n              if (_Helper[\"default\"].isValidEmail(req.body.email)) {\n                _context9.next = 4;\n                break;\n              }\n\n              return _context9.abrupt(\"return\", res.status(400).send({\n                'message': 'Please enter a valid email address'\n              }));\n\n            case 4:\n              hashPassword = _Helper[\"default\"].hashPassword(req.body.password);\n              createQuery = 'Insert into BloodBank(id, name, email, address, password, admin_id) VALUES($1, $2, $3, $4, $5, $6) returning *';\n              values = [(0, _v[\"default\"])(), req.body.name, req.body.email, req.body.address, hashPassword, req.user.id];\n              _context9.prev = 7;\n              _context9.next = 10;\n              return _db[\"default\"].query(createQuery, values);\n\n            case 10:\n              _ref9 = _context9.sent;\n              rows = _ref9.rows;\n\n              if (!rows[0]) {\n                _context9.next = 14;\n                break;\n              }\n\n              return _context9.abrupt(\"return\", res.status(200).send({\n                'Message': 'add bank successful'\n              }));\n\n            case 14:\n              _context9.next = 21;\n              break;\n\n            case 16:\n              _context9.prev = 16;\n              _context9.t0 = _context9[\"catch\"](7);\n\n              if (!(_context9.t0.routine === \"_bt_check_unique\")) {\n                _context9.next = 20;\n                break;\n              }\n\n              return _context9.abrupt(\"return\", res.status(400).send({\n                'message': 'bank with that EMAIL already exist'\n              }));\n\n            case 20:\n              return _context9.abrupt(\"return\", res.status(400).send(_context9.t0));\n\n            case 21:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[7, 16]]);\n    }));\n\n    function addbank(_x17, _x18) {\n      return _addbank.apply(this, arguments);\n    }\n\n    return addbank;\n  }(),\n  getbanks: function () {\n    var _getbanks = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee10(req, res) {\n      var getbanksQuery, _ref10, rows;\n\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              getbanksQuery = \"Select * from BloodBank where admin_id=$1\";\n              _context10.prev = 1;\n              _context10.next = 4;\n              return _db[\"default\"].query(getbanksQuery, [req.user.id]);\n\n            case 4:\n              _ref10 = _context10.sent;\n              rows = _ref10.rows;\n\n              if (rows[0]) {\n                _context10.next = 8;\n                break;\n              }\n\n              return _context10.abrupt(\"return\", res.status(404).send({\n                'message': 'banks record cannot be getted'\n              }));\n\n            case 8:\n              return _context10.abrupt(\"return\", res.status(200).json(rows));\n\n            case 11:\n              _context10.prev = 11;\n              _context10.t0 = _context10[\"catch\"](1);\n              return _context10.abrupt(\"return\", res.status(400).send(_context10.t0));\n\n            case 14:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[1, 11]]);\n    }));\n\n    function getbanks(_x19, _x20) {\n      return _getbanks.apply(this, arguments);\n    }\n\n    return getbanks;\n  }(),\n  deletebanks: function () {\n    var _deletebanks = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee11(req, res) {\n      var deletehospitalsQuery;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              deletehospitalsQuery = \"Delete from BloodBank where admin_id=$1 and id=$2\";\n              _context11.prev = 1;\n              _context11.next = 4;\n              return _db[\"default\"].query(deletehospitalsQuery, [req.user.id, req.params.bankid]);\n\n            case 4:\n              return _context11.abrupt(\"return\", res.status(200).send({\n                'message': 'deleted bank record'\n              }));\n\n            case 7:\n              _context11.prev = 7;\n              _context11.t0 = _context11[\"catch\"](1);\n              return _context11.abrupt(\"return\", res.status(400).send(_context11.t0));\n\n            case 10:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[1, 7]]);\n    }));\n\n    function deletebanks(_x21, _x22) {\n      return _deletebanks.apply(this, arguments);\n    }\n\n    return deletebanks;\n  }(),\n  addhospital: function () {\n    var _addhospital = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee12(req, res) {\n      var hashPassword, createQuery, values, _ref11, rows;\n\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              if (!(!req.body.email || !req.body.password)) {\n                _context12.next = 2;\n                break;\n              }\n\n              return _context12.abrupt(\"return\", res.status(400).send({\n                'message': 'Some values are missing'\n              }));\n\n            case 2:\n              if (_Helper[\"default\"].isValidEmail(req.body.email)) {\n                _context12.next = 4;\n                break;\n              }\n\n              return _context12.abrupt(\"return\", res.status(400).send({\n                'message': 'Please enter a valid email address'\n              }));\n\n            case 4:\n              hashPassword = _Helper[\"default\"].hashPassword(req.body.password);\n              createQuery = 'Insert into Hospital(id, name, email, address, password, admin_id) VALUES($1, $2, $3, $4, $5, $6) returning *';\n              values = [(0, _v[\"default\"])(), req.body.name, req.body.email, req.body.address, hashPassword, req.user.id];\n              _context12.prev = 7;\n              _context12.next = 10;\n              return _db[\"default\"].query(createQuery, values);\n\n            case 10:\n              _ref11 = _context12.sent;\n              rows = _ref11.rows;\n\n              if (!rows[0]) {\n                _context12.next = 14;\n                break;\n              }\n\n              return _context12.abrupt(\"return\", res.status(200).send({\n                'Message': 'add hospital successful'\n              }));\n\n            case 14:\n              _context12.next = 21;\n              break;\n\n            case 16:\n              _context12.prev = 16;\n              _context12.t0 = _context12[\"catch\"](7);\n\n              if (!(_context12.t0.routine === \"_bt_check_unique\")) {\n                _context12.next = 20;\n                break;\n              }\n\n              return _context12.abrupt(\"return\", res.status(400).send({\n                'message': 'hospital with that EMAIL already exist'\n              }));\n\n            case 20:\n              return _context12.abrupt(\"return\", res.status(400).send(_context12.t0));\n\n            case 21:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[7, 16]]);\n    }));\n\n    function addhospital(_x23, _x24) {\n      return _addhospital.apply(this, arguments);\n    }\n\n    return addhospital;\n  }(),\n  gethospitals: function () {\n    var _gethospitals = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee13(req, res) {\n      var gethospitalsQuery, _ref12, rows;\n\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              gethospitalsQuery = \"Select * from hospital where admin_id=$1\";\n              _context13.prev = 1;\n              _context13.next = 4;\n              return _db[\"default\"].query(gethospitalsQuery, [req.user.id]);\n\n            case 4:\n              _ref12 = _context13.sent;\n              rows = _ref12.rows;\n\n              if (rows[0]) {\n                _context13.next = 8;\n                break;\n              }\n\n              return _context13.abrupt(\"return\", res.status(404).send({\n                'message': 'hospitals record cannot be getted'\n              }));\n\n            case 8:\n              return _context13.abrupt(\"return\", res.status(200).json(rows));\n\n            case 11:\n              _context13.prev = 11;\n              _context13.t0 = _context13[\"catch\"](1);\n              return _context13.abrupt(\"return\", res.status(400).send(_context13.t0));\n\n            case 14:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[1, 11]]);\n    }));\n\n    function gethospitals(_x25, _x26) {\n      return _gethospitals.apply(this, arguments);\n    }\n\n    return gethospitals;\n  }(),\n  deletehospitals: function () {\n    var _deletehospitals = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee14(req, res) {\n      var deletehospitalsQuery;\n      return regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              deletehospitalsQuery = \"Delete from Hospital where admin_id=$1 and id=$2\";\n              _context14.prev = 1;\n              _context14.next = 4;\n              return _db[\"default\"].query(deletehospitalsQuery, [req.user.id, req.params.hospitalid]);\n\n            case 4:\n              return _context14.abrupt(\"return\", res.status(200).send({\n                'message': 'deleted hospital record'\n              }));\n\n            case 7:\n              _context14.prev = 7;\n              _context14.t0 = _context14[\"catch\"](1);\n              return _context14.abrupt(\"return\", res.status(400).send(_context14.t0));\n\n            case 10:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[1, 7]]);\n    }));\n\n    function deletehospitals(_x27, _x28) {\n      return _deletehospitals.apply(this, arguments);\n    }\n\n    return deletehospitals;\n  }(),\n  blogin: function () {\n    var _blogin = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee15(req, res) {\n      var text, _ref13, rows, token;\n\n      return regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              if (!(!req.body.email || !req.body.password)) {\n                _context15.next = 2;\n                break;\n              }\n\n              return _context15.abrupt(\"return\", res.status(400).send({\n                'message': 'Some values are missing'\n              }));\n\n            case 2:\n              text = \"SELECT * FROM BloodBank WHERE email = $1\";\n              _context15.prev = 3;\n              _context15.next = 6;\n              return _db[\"default\"].query(text, [req.body.email]);\n\n            case 6:\n              _ref13 = _context15.sent;\n              rows = _ref13.rows;\n\n              if (rows[0]) {\n                _context15.next = 10;\n                break;\n              }\n\n              return _context15.abrupt(\"return\", res.status(400).send({\n                'message': 'The credentials you provided is incorrect'\n              }));\n\n            case 10:\n              if (_Helper[\"default\"].comparePassword(rows[0].password, req.body.password)) {\n                _context15.next = 12;\n                break;\n              }\n\n              return _context15.abrupt(\"return\", res.status(400).send({\n                'message': 'The credentials you provided is incorrect'\n              }));\n\n            case 12:\n              token = _Helper[\"default\"].generateToken(rows[0].id);\n              return _context15.abrupt(\"return\", res.status(200).send({\n                token: token\n              }));\n\n            case 16:\n              _context15.prev = 16;\n              _context15.t0 = _context15[\"catch\"](3);\n              return _context15.abrupt(\"return\", res.status(400).send(_context15.t0));\n\n            case 19:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15, null, [[3, 16]]);\n    }));\n\n    function blogin(_x29, _x30) {\n      return _blogin.apply(this, arguments);\n    }\n\n    return blogin;\n  }(),\n  bprofile: function () {\n    var _bprofile = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee16(req, res) {\n      var profileQuery, _ref14, rows;\n\n      return regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              profileQuery = \"Select * FROM bloodbank WHERE id=$1\";\n              _context16.prev = 1;\n              _context16.next = 4;\n              return _db[\"default\"].query(profileQuery, [req.user.id]);\n\n            case 4:\n              _ref14 = _context16.sent;\n              rows = _ref14.rows;\n\n              if (rows[0]) {\n                _context16.next = 8;\n                break;\n              }\n\n              return _context16.abrupt(\"return\", res.status(404).send({\n                'message': 'bank not found'\n              }));\n\n            case 8:\n              return _context16.abrupt(\"return\", res.status(200).json(rows[0]));\n\n            case 11:\n              _context16.prev = 11;\n              _context16.t0 = _context16[\"catch\"](1);\n              return _context16.abrupt(\"return\", res.status(400).send(_context16.t0));\n\n            case 14:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, null, [[1, 11]]);\n    }));\n\n    function bprofile(_x31, _x32) {\n      return _bprofile.apply(this, arguments);\n    }\n\n    return bprofile;\n  }(),\n  getdonors: function () {\n    var _getdonors = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee17(req, res) {\n      var getdonorQuery, _ref15, rows;\n\n      return regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              getdonorQuery = \"Select donors.* from register inner join donors on register.donor_id=donors.id where bank_id=$1 and status='A'\";\n              _context17.prev = 1;\n              _context17.next = 4;\n              return _db[\"default\"].query(getdonorQuery, [req.user.id]);\n\n            case 4:\n              _ref15 = _context17.sent;\n              rows = _ref15.rows;\n\n              if (rows[0]) {\n                _context17.next = 8;\n                break;\n              }\n\n              return _context17.abrupt(\"return\", res.status(404).send({\n                'message': 'no donors'\n              }));\n\n            case 8:\n              return _context17.abrupt(\"return\", res.status(200).json(rows));\n\n            case 11:\n              _context17.prev = 11;\n              _context17.t0 = _context17[\"catch\"](1);\n              return _context17.abrupt(\"return\", res.status(400).send(_context17.t0));\n\n            case 14:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17, null, [[1, 11]]);\n    }));\n\n    function getdonors(_x33, _x34) {\n      return _getdonors.apply(this, arguments);\n    }\n\n    return getdonors;\n  }(),\n  deletedonors: function () {\n    var _deletedonors = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee18(req, res) {\n      var getdonorQuery, deletedonorQuery, _ref16, rows;\n\n      return regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              getdonorQuery = \"Select * from register where bank_id=$1 and donor_id=$2\";\n              deletedonorQuery = \"Update register set status=$1 where id=$2\";\n              _context18.prev = 2;\n              _context18.next = 5;\n              return _db[\"default\"].query(getdonorQuery, [req.user.id, req.params.donorid]);\n\n            case 5:\n              _ref16 = _context18.sent;\n              rows = _ref16.rows;\n\n              if (rows[0]) {\n                _context18.next = 9;\n                break;\n              }\n\n              return _context18.abrupt(\"return\", res.status(404).send({\n                'message': 'donors record cannot be getted'\n              }));\n\n            case 9:\n              if (!(rows[0].status == 'B')) {\n                _context18.next = 11;\n                break;\n              }\n\n              return _context18.abrupt(\"return\", res.status(400).send({\n                'message': 'donor record already banned'\n              }));\n\n            case 11:\n              _context18.next = 13;\n              return _db[\"default\"].query(deletedonorQuery, ['B', rows[0].id]);\n\n            case 13:\n              return _context18.abrupt(\"return\", res.status(200).send({\n                'message': 'deleted donor record'\n              }));\n\n            case 16:\n              _context18.prev = 16;\n              _context18.t0 = _context18[\"catch\"](2);\n              return _context18.abrupt(\"return\", res.status(400).send(_context18.t0));\n\n            case 19:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18, null, [[2, 16]]);\n    }));\n\n    function deletedonors(_x35, _x36) {\n      return _deletedonors.apply(this, arguments);\n    }\n\n    return deletedonors;\n  }(),\n  listdonate: function () {\n    var _listdonate = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee19(req, res) {\n      var getorderQuery, _ref17, rows;\n\n      return regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              getorderQuery = \"Select * from blood where bank_id=$1 and status='P' order by DateOfDonate\";\n              _context19.prev = 1;\n              _context19.next = 4;\n              return _db[\"default\"].query(getorderQuery, [req.user.id]);\n\n            case 4:\n              _ref17 = _context19.sent;\n              rows = _ref17.rows;\n\n              if (rows[0]) {\n                _context19.next = 8;\n                break;\n              }\n\n              return _context19.abrupt(\"return\", res.status(404).send({\n                'message': 'list donate request not found'\n              }));\n\n            case 8:\n              return _context19.abrupt(\"return\", res.status(200).json(rows));\n\n            case 11:\n              _context19.prev = 11;\n              _context19.t0 = _context19[\"catch\"](1);\n              return _context19.abrupt(\"return\", res.status(400).send(_context19.t0));\n\n            case 14:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19, null, [[1, 11]]);\n    }));\n\n    function listdonate(_x37, _x38) {\n      return _listdonate.apply(this, arguments);\n    }\n\n    return listdonate;\n  }(),\n  handledonate: function () {\n    var _handledonate = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee20(req, res) {\n      var handledonateQuery, values8;\n      return regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              if (req.body.status) {\n                _context20.next = 2;\n                break;\n              }\n\n              return _context20.abrupt(\"return\", res.status(400).send({\n                'message': 'Some values are missing'\n              }));\n\n            case 2:\n              handledonateQuery = \"Update blood set status=$1 where bank_id=$2 and id=$3 returning *\";\n              values8 = [req.body.status, req.user.id, req.params.donate_id];\n              _context20.prev = 4;\n              _context20.next = 7;\n              return _db[\"default\"].query(handledonateQuery, values8);\n\n            case 7:\n              return _context20.abrupt(\"return\", res.status(200).send({\n                'message': 'accepted donate'\n              }));\n\n            case 10:\n              _context20.prev = 10;\n              _context20.t0 = _context20[\"catch\"](4);\n              return _context20.abrupt(\"return\", res.status(400).send(_context20.t0));\n\n            case 13:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20, null, [[4, 10]]);\n    }));\n\n    function handledonate(_x39, _x40) {\n      return _handledonate.apply(this, arguments);\n    }\n\n    return handledonate;\n  }(),\n  getstores: function () {\n    var _getstores = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee21(req, res) {\n      var getQuery, _ref18, rows;\n\n      return regeneratorRuntime.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              getQuery = \"Select * from blood where bank_id=$1 and amount is null and status='A' order by DateOfDonate\";\n              _context21.prev = 1;\n              _context21.next = 4;\n              return _db[\"default\"].query(getQuery, [req.user.id]);\n\n            case 4:\n              _ref18 = _context21.sent;\n              rows = _ref18.rows;\n\n              if (rows[0]) {\n                _context21.next = 8;\n                break;\n              }\n\n              return _context21.abrupt(\"return\", res.status(404).send({\n                'message': 'blood record cannot be getted'\n              }));\n\n            case 8:\n              return _context21.abrupt(\"return\", res.status(200).json(rows));\n\n            case 11:\n              _context21.prev = 11;\n              _context21.t0 = _context21[\"catch\"](1);\n              return _context21.abrupt(\"return\", res.status(400).send(_context21.t0));\n\n            case 14:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21, null, [[1, 11]]);\n    }));\n\n    function getstores(_x41, _x42) {\n      return _getstores.apply(this, arguments);\n    }\n\n    return getstores;\n  }(),\n  stores: function () {\n    var _stores = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee22(req, res) {\n      var amountQuery, getstoreQuery, checkstorequery, insertstoreQuery, updatestoreQuery, values4, _ref19, rows, rows0, total_amount;\n\n      return regeneratorRuntime.wrap(function _callee22$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              amountQuery = \"Update blood set amount=$1,status=$2 where id=$3\";\n              getstoreQuery = \"Select blood_type,amount from blood inner join donors on blood.donor_id=donors.id where blood.id=$1 and status='A'\";\n              checkstorequery = \"Select * from bloodstore where BloodType=$1 and bank_id=$2\";\n              insertstoreQuery = \"Insert into Bloodstore(id,BloodType,Amount,bank_id) values($1,$2,$3,$4)\";\n              updatestoreQuery = \"Update Bloodstore set Amount=$1 where id=$2\";\n              values4 = [req.body.amount, 'R', req.params.donate_id];\n              _context22.prev = 6;\n              _context22.next = 9;\n              return _db[\"default\"].query(amountQuery, values4);\n\n            case 9:\n              _context22.next = 11;\n              return _db[\"default\"].query(getstoreQuery, [req.params.donate_id]);\n\n            case 11:\n              _ref19 = _context22.sent;\n              rows = _ref19.rows;\n\n              if (rows[0]) {\n                _context22.next = 15;\n                break;\n              }\n\n              return _context22.abrupt(\"return\", res.status(404).send({\n                'message': 'already accepted added amount to bloodstore'\n              }));\n\n            case 15:\n              _context22.next = 17;\n              return _db[\"default\"].query(checkstorequery, [rows[0].blood_type, req.user.id]);\n\n            case 17:\n              rows0 = _context22.sent;\n\n              if (rows0.rows[0]) {\n                _context22.next = 23;\n                break;\n              }\n\n              _context22.next = 21;\n              return _db[\"default\"].query(insertstoreQuery, [(0, _v[\"default\"])(), rows[0].blood_type, rows[0].amount, req.user.id]);\n\n            case 21:\n              _context22.next = 26;\n              break;\n\n            case 23:\n              total_amount = rows[0].amount + rows0.rows[0].amount;\n              _context22.next = 26;\n              return _db[\"default\"].query(updatestoreQuery, [total_amount, rows0.rows[0].id]);\n\n            case 26:\n              return _context22.abrupt(\"return\", res.status(200).send({\n                'message': 'updated record stored'\n              }));\n\n            case 29:\n              _context22.prev = 29;\n              _context22.t0 = _context22[\"catch\"](6);\n              return _context22.abrupt(\"return\", res.status(400).send(_context22.t0));\n\n            case 32:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, _callee22, null, [[6, 29]]);\n    }));\n\n    function stores(_x43, _x44) {\n      return _stores.apply(this, arguments);\n    }\n\n    return stores;\n  }(),\n  bloodstores: function () {\n    var _bloodstores = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee23(req, res) {\n      var getstoreQuery, _ref20, rows;\n\n      return regeneratorRuntime.wrap(function _callee23$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              getstoreQuery = \"Select * from Bloodstore where bank_id=$1\";\n              _context23.prev = 1;\n              _context23.next = 4;\n              return _db[\"default\"].query(getstoreQuery, [req.user.id]);\n\n            case 4:\n              _ref20 = _context23.sent;\n              rows = _ref20.rows;\n\n              if (rows[0]) {\n                _context23.next = 8;\n                break;\n              }\n\n              return _context23.abrupt(\"return\", res.status(404).send({\n                'message': 'no record'\n              }));\n\n            case 8:\n              return _context23.abrupt(\"return\", res.status(200).json(rows));\n\n            case 11:\n              _context23.prev = 11;\n              _context23.t0 = _context23[\"catch\"](1);\n              return _context23.abrupt(\"return\", res.status(400).send(_context23.t0));\n\n            case 14:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, _callee23, null, [[1, 11]]);\n    }));\n\n    function bloodstores(_x45, _x46) {\n      return _bloodstores.apply(this, arguments);\n    }\n\n    return bloodstores;\n  }(),\n  bgetorder: function () {\n    var _bgetorder = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee24(req, res) {\n      var bgetorderQuery, _ref21, rows;\n\n      return regeneratorRuntime.wrap(function _callee24$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              bgetorderQuery = \"Select * from orders where bank_id=$1 and status='A'\";\n              _context24.prev = 1;\n              _context24.next = 4;\n              return _db[\"default\"].query(bgetorderQuery, [req.user.id]);\n\n            case 4:\n              _ref21 = _context24.sent;\n              rows = _ref21.rows;\n\n              if (rows[0]) {\n                _context24.next = 8;\n                break;\n              }\n\n              return _context24.abrupt(\"return\", res.status(404).send({\n                'message': 'no order'\n              }));\n\n            case 8:\n              return _context24.abrupt(\"return\", res.status(200).json(rows));\n\n            case 11:\n              _context24.prev = 11;\n              _context24.t0 = _context24[\"catch\"](1);\n              return _context24.abrupt(\"return\", res.status(400).send(_context24.t0));\n\n            case 14:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, _callee24, null, [[1, 11]]);\n    }));\n\n    function bgetorder(_x47, _x48) {\n      return _bgetorder.apply(this, arguments);\n    }\n\n    return bgetorder;\n  }(),\n  gethandleorder: function () {\n    var _gethandleorder = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee25(req, res) {\n      var gethandleorderQuery, _ref22, rows;\n\n      return regeneratorRuntime.wrap(function _callee25$(_context25) {\n        while (1) {\n          switch (_context25.prev = _context25.next) {\n            case 0:\n              gethandleorderQuery = \"Select * from orders where bank_id=$1 and status='P'\";\n              _context25.prev = 1;\n              _context25.next = 4;\n              return _db[\"default\"].query(gethandleorderQuery, [req.user.id]);\n\n            case 4:\n              _ref22 = _context25.sent;\n              rows = _ref22.rows;\n\n              if (rows[0]) {\n                _context25.next = 8;\n                break;\n              }\n\n              return _context25.abrupt(\"return\", res.status(404).send({\n                'message': 'no order'\n              }));\n\n            case 8:\n              return _context25.abrupt(\"return\", res.status(200).json(rows));\n\n            case 11:\n              _context25.prev = 11;\n              _context25.t0 = _context25[\"catch\"](1);\n              return _context25.abrupt(\"return\", res.status(400).send(_context25.t0));\n\n            case 14:\n            case \"end\":\n              return _context25.stop();\n          }\n        }\n      }, _callee25, null, [[1, 11]]);\n    }));\n\n    function gethandleorder(_x49, _x50) {\n      return _gethandleorder.apply(this, arguments);\n    }\n\n    return gethandleorder;\n  }(),\n  handleorder: function () {\n    var _handleorder = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee26(req, res) {\n      var handleorderQuery, getorderQuery, checkstorequery, updatestoreQuery, values8, _ref23, rows, rows0, total_amount;\n\n      return regeneratorRuntime.wrap(function _callee26$(_context26) {\n        while (1) {\n          switch (_context26.prev = _context26.next) {\n            case 0:\n              handleorderQuery = \"Update orders set status=$1 where bank_id=$2 and id=$3 returning *\";\n              getorderQuery = \"Select * from orders where id=$1\";\n              checkstorequery = \"Select * from bloodstore where BloodType=$1 and bank_id=$2\";\n              updatestoreQuery = \"Update bloodstore set Amount=$1 where id=$2\";\n              values8 = [req.body.status, req.user.id, req.params.orderid];\n              _context26.prev = 5;\n              _context26.next = 8;\n              return _db[\"default\"].query(handleorderQuery, values8);\n\n            case 8:\n              _context26.next = 10;\n              return _db[\"default\"].query(getorderQuery, [req.params.orderid]);\n\n            case 10:\n              _ref23 = _context26.sent;\n              rows = _ref23.rows;\n\n              if (rows[0]) {\n                _context26.next = 14;\n                break;\n              }\n\n              return _context26.abrupt(\"return\", res.status(404).send({\n                'message': 'cannot order'\n              }));\n\n            case 14:\n              if (!(rows[0].status == 'R')) {\n                _context26.next = 16;\n                break;\n              }\n\n              return _context26.abrupt(\"return\", res.status(200).send({\n                'message': 'rejected order'\n              }));\n\n            case 16:\n              if (!(rows[0].status == 'A')) {\n                _context26.next = 28;\n                break;\n              }\n\n              _context26.next = 19;\n              return _db[\"default\"].query(checkstorequery, [rows[0].bloodtype, req.user.id]);\n\n            case 19:\n              rows0 = _context26.sent;\n\n              if (rows0.rows[0]) {\n                _context26.next = 24;\n                break;\n              }\n\n              return _context26.abrupt(\"return\", res.status(400).send({\n                'Message': 'out of blood'\n              }));\n\n            case 24:\n              total_amount = rows0.rows[0].amount - rows[0].amount;\n              _context26.next = 27;\n              return _db[\"default\"].query(updatestoreQuery, [total_amount, rows0.rows[0].id]);\n\n            case 27:\n              return _context26.abrupt(\"return\", res.status(200).send({\n                'message': 'accepted order'\n              }));\n\n            case 28:\n              _context26.next = 33;\n              break;\n\n            case 30:\n              _context26.prev = 30;\n              _context26.t0 = _context26[\"catch\"](5);\n              return _context26.abrupt(\"return\", res.status(400).send(_context26.t0));\n\n            case 33:\n            case \"end\":\n              return _context26.stop();\n          }\n        }\n      }, _callee26, null, [[5, 30]]);\n    }));\n\n    function handleorder(_x51, _x52) {\n      return _handleorder.apply(this, arguments);\n    }\n\n    return handleorder;\n  }(),\n  hlogin: function () {\n    var _hlogin = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee27(req, res) {\n      var text, _ref24, rows, token;\n\n      return regeneratorRuntime.wrap(function _callee27$(_context27) {\n        while (1) {\n          switch (_context27.prev = _context27.next) {\n            case 0:\n              if (!(!req.body.email || !req.body.password)) {\n                _context27.next = 2;\n                break;\n              }\n\n              return _context27.abrupt(\"return\", res.status(400).send({\n                'message': 'Some values are missing'\n              }));\n\n            case 2:\n              text = \"SELECT * FROM Hospital WHERE email = $1\";\n              _context27.prev = 3;\n              _context27.next = 6;\n              return _db[\"default\"].query(text, [req.body.email]);\n\n            case 6:\n              _ref24 = _context27.sent;\n              rows = _ref24.rows;\n\n              if (rows[0]) {\n                _context27.next = 10;\n                break;\n              }\n\n              return _context27.abrupt(\"return\", res.status(400).send({\n                'message': 'The credentials you provided is incorrect'\n              }));\n\n            case 10:\n              if (_Helper[\"default\"].comparePassword(rows[0].password, req.body.password)) {\n                _context27.next = 12;\n                break;\n              }\n\n              return _context27.abrupt(\"return\", res.status(400).send({\n                'message': 'The credentials you provided is incorrect'\n              }));\n\n            case 12:\n              token = _Helper[\"default\"].generateToken(rows[0].id);\n              return _context27.abrupt(\"return\", res.status(200).send({\n                token: token\n              }));\n\n            case 16:\n              _context27.prev = 16;\n              _context27.t0 = _context27[\"catch\"](3);\n              return _context27.abrupt(\"return\", res.status(400).send(_context27.t0));\n\n            case 19:\n            case \"end\":\n              return _context27.stop();\n          }\n        }\n      }, _callee27, null, [[3, 16]]);\n    }));\n\n    function hlogin(_x53, _x54) {\n      return _hlogin.apply(this, arguments);\n    }\n\n    return hlogin;\n  }(),\n  hprofile: function () {\n    var _hprofile = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee28(req, res) {\n      var profileQuery, _ref25, rows;\n\n      return regeneratorRuntime.wrap(function _callee28$(_context28) {\n        while (1) {\n          switch (_context28.prev = _context28.next) {\n            case 0:\n              profileQuery = \"Select * FROM hospital WHERE id=$1\";\n              _context28.prev = 1;\n              _context28.next = 4;\n              return _db[\"default\"].query(profileQuery, [req.user.id]);\n\n            case 4:\n              _ref25 = _context28.sent;\n              rows = _ref25.rows;\n\n              if (rows[0]) {\n                _context28.next = 8;\n                break;\n              }\n\n              return _context28.abrupt(\"return\", res.status(404).send({\n                'message': 'hospital not found'\n              }));\n\n            case 8:\n              return _context28.abrupt(\"return\", res.status(200).json(rows[0]));\n\n            case 11:\n              _context28.prev = 11;\n              _context28.t0 = _context28[\"catch\"](1);\n              return _context28.abrupt(\"return\", res.status(400).send(_context28.t0));\n\n            case 14:\n            case \"end\":\n              return _context28.stop();\n          }\n        }\n      }, _callee28, null, [[1, 11]]);\n    }));\n\n    function hprofile(_x55, _x56) {\n      return _hprofile.apply(this, arguments);\n    }\n\n    return hprofile;\n  }(),\n  order: function () {\n    var _order = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee29(req, res) {\n      var checkbankQuery, orderQuery, rows0, values6, _ref26, rows;\n\n      return regeneratorRuntime.wrap(function _callee29$(_context29) {\n        while (1) {\n          switch (_context29.prev = _context29.next) {\n            case 0:\n              checkbankQuery = \"Select * from BloodBank where name=$1\";\n              orderQuery = \"Insert into orders(id,BloodType,Amount,hospital_id,bank_id,status) values($1,$2,$3,$4,$5,$6) returning *\";\n              _context29.prev = 2;\n              _context29.next = 5;\n              return _db[\"default\"].query(checkbankQuery, [req.body.bank_name]);\n\n            case 5:\n              rows0 = _context29.sent;\n\n              if (rows0.rows[0]) {\n                _context29.next = 8;\n                break;\n              }\n\n              return _context29.abrupt(\"return\", res.status(404).send({\n                'message': 'bank name not found'\n              }));\n\n            case 8:\n              values6 = [(0, _v[\"default\"])(), req.body.bloodtype, req.body.amount, req.user.id, rows0.rows[0].id, 'P'];\n              _context29.next = 11;\n              return _db[\"default\"].query(orderQuery, values6);\n\n            case 11:\n              _ref26 = _context29.sent;\n              rows = _ref26.rows;\n\n              if (rows[0]) {\n                _context29.next = 15;\n                break;\n              }\n\n              return _context29.abrupt(\"return\", res.status(404).send({\n                'message': 'order not found'\n              }));\n\n            case 15:\n              return _context29.abrupt(\"return\", res.status(200).send({\n                'message': 'created order'\n              }));\n\n            case 18:\n              _context29.prev = 18;\n              _context29.t0 = _context29[\"catch\"](2);\n              return _context29.abrupt(\"return\", res.status(400).send(_context29.t0));\n\n            case 21:\n            case \"end\":\n              return _context29.stop();\n          }\n        }\n      }, _callee29, null, [[2, 18]]);\n    }));\n\n    function order(_x57, _x58) {\n      return _order.apply(this, arguments);\n    }\n\n    return order;\n  }(),\n  hgetorder: function () {\n    var _hgetorder = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee30(req, res) {\n      var hgetorderQuery, _ref27, rows;\n\n      return regeneratorRuntime.wrap(function _callee30$(_context30) {\n        while (1) {\n          switch (_context30.prev = _context30.next) {\n            case 0:\n              hgetorderQuery = \"Select * from orders where hospital_id=$1\";\n              _context30.prev = 1;\n              _context30.next = 4;\n              return _db[\"default\"].query(hgetorderQuery, [req.user.id]);\n\n            case 4:\n              _ref27 = _context30.sent;\n              rows = _ref27.rows;\n\n              if (rows[0]) {\n                _context30.next = 8;\n                break;\n              }\n\n              return _context30.abrupt(\"return\", res.status(404).send({\n                'message': 'no order'\n              }));\n\n            case 8:\n              return _context30.abrupt(\"return\", res.status(200).json(rows));\n\n            case 11:\n              _context30.prev = 11;\n              _context30.t0 = _context30[\"catch\"](1);\n              return _context30.abrupt(\"return\", res.status(400).send(_context30.t0));\n\n            case 14:\n            case \"end\":\n              return _context30.stop();\n          }\n        }\n      }, _callee30, null, [[1, 11]]);\n    }));\n\n    function hgetorder(_x59, _x60) {\n      return _hgetorder.apply(this, arguments);\n    }\n\n    return hgetorder;\n  }(),\n  editorder: function () {\n    var _editorder = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee31(req, res) {\n      var orderQuery, values6, _ref28, rows;\n\n      return regeneratorRuntime.wrap(function _callee31$(_context31) {\n        while (1) {\n          switch (_context31.prev = _context31.next) {\n            case 0:\n              orderQuery = \"Update orders set BloodType=$1,Amount=$2,hospital_id=$3 where id=$4 returning *\";\n              values6 = [req.body.bloodtype, req.body.amount, req.user.id, req.params.orderid];\n              _context31.prev = 2;\n              _context31.next = 5;\n              return _db[\"default\"].query(orderQuery, values6);\n\n            case 5:\n              _ref28 = _context31.sent;\n              rows = _ref28.rows;\n\n              if (rows[0]) {\n                _context31.next = 9;\n                break;\n              }\n\n              return _context31.abrupt(\"return\", res.status(404).send({\n                'message': 'order not found'\n              }));\n\n            case 9:\n              return _context31.abrupt(\"return\", res.status(200).send({\n                'message': 'edited order'\n              }));\n\n            case 12:\n              _context31.prev = 12;\n              _context31.t0 = _context31[\"catch\"](2);\n              return _context31.abrupt(\"return\", res.status(400).send(_context31.t0));\n\n            case 15:\n            case \"end\":\n              return _context31.stop();\n          }\n        }\n      }, _callee31, null, [[2, 12]]);\n    }));\n\n    function editorder(_x61, _x62) {\n      return _editorder.apply(this, arguments);\n    }\n\n    return editorder;\n  }(),\n  deleteorder: function () {\n    var _deleteorder = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee32(req, res) {\n      var ckorder, deleteorderQuery, values7, rows9;\n      return regeneratorRuntime.wrap(function _callee32$(_context32) {\n        while (1) {\n          switch (_context32.prev = _context32.next) {\n            case 0:\n              ckorder = \"Select status from orders where id=$1 and hospital_id=$2\";\n              deleteorderQuery = \"Delete from orders where id=$1\";\n              values7 = [req.params.orderid, req.user.id];\n              _context32.prev = 3;\n              _context32.next = 6;\n              return _db[\"default\"].query(ckorder, values7);\n\n            case 6:\n              rows9 = _context32.sent;\n\n              if (rows9.rows[0]) {\n                _context32.next = 9;\n                break;\n              }\n\n              return _context32.abrupt(\"return\", res.status(404).send({\n                'message': 'order not found'\n              }));\n\n            case 9:\n              if (!(rows9.rows[0] == 'A')) {\n                _context32.next = 11;\n                break;\n              }\n\n              return _context32.abrupt(\"return\", res.status(400).send({\n                'message': 'order already accepted'\n              }));\n\n            case 11:\n              _context32.next = 13;\n              return _db[\"default\"].query(deleteorderQuery, [req.params.orderid]);\n\n            case 13:\n              return _context32.abrupt(\"return\", res.status(200).send({\n                'message': 'deleted order'\n              }));\n\n            case 16:\n              _context32.prev = 16;\n              _context32.t0 = _context32[\"catch\"](3);\n              return _context32.abrupt(\"return\", res.status(400).send(_context32.t0));\n\n            case 19:\n            case \"end\":\n              return _context32.stop();\n          }\n        }\n      }, _callee32, null, [[3, 16]]);\n    }));\n\n    function deleteorder(_x63, _x64) {\n      return _deleteorder.apply(this, arguments);\n    }\n\n    return deleteorder;\n  }()\n};\nvar _default = Controllerdb;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Controllerdb.js"
      ],
      "names": [
        "Controllerdb",
        "create",
        "req",
        "res",
        "body",
        "email",
        "password",
        "status",
        "send",
        "Helper",
        "isValidEmail",
        "hashPassword",
        "createQuery",
        "values",
        "first_name",
        "last_name",
        "DateOfBirth",
        "blood_type",
        "gender",
        "address",
        "contact_no",
        "db",
        "query",
        "rows",
        "routine",
        "login",
        "text",
        "comparePassword",
        "token",
        "generateToken",
        "id",
        "profile",
        "profileQuery",
        "user",
        "json",
        "edit",
        "editQuery",
        "values0",
        "donate",
        "DateOfDonate",
        "bank_name",
        "donateQuery",
        "checkstatusQuery",
        "checkbankQuery",
        "registerQuery",
        "rows0",
        "values1",
        "values2",
        "rows1",
        "dgetbanks",
        "getbanksQuery",
        "history",
        "alogin",
        "addbank",
        "name",
        "getbanks",
        "deletebanks",
        "deletehospitalsQuery",
        "params",
        "bankid",
        "addhospital",
        "gethospitals",
        "gethospitalsQuery",
        "deletehospitals",
        "hospitalid",
        "blogin",
        "bprofile",
        "getdonors",
        "getdonorQuery",
        "deletedonors",
        "deletedonorQuery",
        "donorid",
        "listdonate",
        "getorderQuery",
        "handledonate",
        "handledonateQuery",
        "values8",
        "donate_id",
        "getstores",
        "getQuery",
        "stores",
        "amountQuery",
        "getstoreQuery",
        "checkstorequery",
        "insertstoreQuery",
        "updatestoreQuery",
        "values4",
        "amount",
        "total_amount",
        "bloodstores",
        "bgetorder",
        "bgetorderQuery",
        "gethandleorder",
        "gethandleorderQuery",
        "handleorder",
        "handleorderQuery",
        "orderid",
        "bloodtype",
        "hlogin",
        "hprofile",
        "order",
        "orderQuery",
        "values6",
        "hgetorder",
        "hgetorderQuery",
        "editorder",
        "deleteorder",
        "ckorder",
        "deleteorderQuery",
        "values7",
        "rows9"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,YAAY,GAAG;AACnB;;;;;;AAMMC,EAAAA,MAPa;AAAA;AAAA;AAAA,6CAONC,GAPM,EAODC,GAPC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQb,CAACD,GAAG,CAACE,IAAJ,CAASC,KAAV,IAAmB,CAACH,GAAG,CAACE,IAAJ,CAASE,QARhB;AAAA;AAAA;AAAA;;AAAA,+CASRH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CATQ;;AAAA;AAAA,kBAWZC,mBAAOC,YAAP,CAAoBR,GAAG,CAACE,IAAJ,CAASC,KAA7B,CAXY;AAAA;AAAA;AAAA;;AAAA,+CAYRF,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAE,2BAAW;AAAb,eAFD,CAZQ;;AAAA;AAgBXG,cAAAA,YAhBW,GAgBIF,mBAAOE,YAAP,CAAoBT,GAAG,CAACE,IAAJ,CAASE,QAA7B,CAhBJ;AAiBXM,cAAAA,WAjBW,GAiBG,+KAjBH;AAkBXC,cAAAA,MAlBW,GAkBF,CACb,oBADa,EAEbX,GAAG,CAACE,IAAJ,CAASU,UAFI,EAGbZ,GAAG,CAACE,IAAJ,CAASW,SAHI,EAIbb,GAAG,CAACE,IAAJ,CAASC,KAJI,EAKbM,YALa,EAMbT,GAAG,CAACE,IAAJ,CAASY,WANI,EAObd,GAAG,CAACE,IAAJ,CAASa,UAPI,EAQbf,GAAG,CAACE,IAAJ,CAASc,MARI,EASbhB,GAAG,CAACE,IAAJ,CAASe,OATI,EAUbjB,GAAG,CAACE,IAAJ,CAASgB,UAVI,CAlBE;AAAA;AAAA;AAAA,qBAgCQC,eAAGC,KAAH,CAASV,WAAT,EAAsBC,MAAtB,CAhCR;;AAAA;AAAA;AAgCPU,cAAAA,IAhCO,QAgCPA,IAhCO;;AAAA,mBAiCXA,IAAI,CAAC,CAAD,CAjCO;AAAA;AAAA;AAAA;;AAAA,+CAkCNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAU;AAAZ,eAArB,CAlCM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,oBAoCX,YAAMgB,OAAN,KAAkB,kBApCP;AAAA;AAAA;AAAA;;AAAA,+CAqCNrB,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAE,2BAAW;AAAb,eAFD,CArCM;;AAAA;AAAA,+CAyCRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,aAzCQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA4CnB;;;;;;AAMMiB,EAAAA,KAlDa;AAAA;AAAA;AAAA,8CAkDPvB,GAlDO,EAkDFC,GAlDE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBAmDb,CAACD,GAAG,CAACE,IAAJ,CAASC,KAAV,IAAmB,CAACH,GAAG,CAACE,IAAJ,CAASE,QAnDhB;AAAA;AAAA;AAAA;;AAAA,gDAoDRH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CApDQ;;AAAA;AAAA,kBAsDZC,mBAAOC,YAAP,CAAoBR,GAAG,CAACE,IAAJ,CAASC,KAA7B,CAtDY;AAAA;AAAA;AAAA;;AAAA,gDAuDRF,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAE,2BAAW;AAAb,eAFD,CAvDQ;;AAAA;AA2DXkB,cAAAA,IA3DW,GA2DJ,uCA3DI;AAAA;AAAA;AAAA,qBA6DQL,eAAGC,KAAH,CAASI,IAAT,EAAe,CAACxB,GAAG,CAACE,IAAJ,CAASC,KAAV,CAAf,CA7DR;;AAAA;AAAA;AA6DPkB,cAAAA,IA7DO,SA6DPA,IA7DO;;AAAA,kBA8DVA,IAAI,CAAC,CAAD,CA9DM;AAAA;AAAA;AAAA;;AAAA,gDA+DNpB,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAE,2BAAW;AAAb,eAFD,CA/DM;;AAAA;AAAA,kBAmEVC,mBAAOkB,eAAP,CAAuBJ,IAAI,CAAC,CAAD,CAAJ,CAAQjB,QAA/B,EAAyCJ,GAAG,CAACE,IAAJ,CAASE,QAAlD,CAnEU;AAAA;AAAA;AAAA;;AAAA,gDAoENH,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAE,2BAAW;AAAb,eAFD,CApEM;;AAAA;AAwEToB,cAAAA,KAxES,GAwEDnB,mBAAOoB,aAAP,CAAqBN,IAAI,CAAC,CAAD,CAAJ,CAAQO,EAA7B,CAxEC;AAAA,gDAyER3B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEoB,gBAAAA,KAAK,EAALA;AAAF,eAArB,CAzEQ;;AAAA;AAAA;AAAA;AAAA,gDA2ERzB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,cA3EQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA8EnB;;;;;;;AAMA;;;;;;;;;;;;AAYMuB,EAAAA,OAhGa;AAAA;AAAA;AAAA,8CAgGL7B,GAhGK,EAgGAC,GAhGA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAiGX6B,cAAAA,YAjGW,GAiGI,kCAjGJ;AAAA;AAAA;AAAA,qBAmGQX,eAAGC,KAAH,CAASU,YAAT,EAAuB,CAAC9B,GAAG,CAAC+B,IAAJ,CAASH,EAAV,CAAvB,CAnGR;;AAAA;AAAA;AAmGPP,cAAAA,IAnGO,SAmGPA,IAnGO;;AAAA,kBAoGVA,IAAI,CAAC,CAAD,CApGM;AAAA;AAAA;AAAA;;AAAA,gDAqGNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CArGM;;AAAA;AAAA,gDAwGNL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgB2B,IAAhB,CAAqBX,IAAI,CAAC,CAAD,CAAzB,CAxGM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,gDA2GRpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,cA3GQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA8Gb2B,EAAAA,IA9Ga;AAAA;AAAA;AAAA,8CA8GRjC,GA9GQ,EA8GHC,GA9GG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kBA+GZD,GAAG,CAACE,IAAJ,CAASC,KA/GG;AAAA;AAAA;AAAA;;AAAA,gDAgHRF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAhHQ;;AAAA;AAAA,kBAkHZC,mBAAOC,YAAP,CAAoBR,GAAG,CAACE,IAAJ,CAASC,KAA7B,CAlHY;AAAA;AAAA;AAAA;;AAAA,gDAmHRF,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAE,2BAAW;AAAb,eAFD,CAnHQ;;AAAA;AAuHX4B,cAAAA,SAvHW,GAwHf,oJAxHe;AAyHXC,cAAAA,OAzHW,GAyHD,CACdnC,GAAG,CAACE,IAAJ,CAASU,UADK,EAEdZ,GAAG,CAACE,IAAJ,CAASW,SAFK,EAGdb,GAAG,CAACE,IAAJ,CAASC,KAHK,EAIdH,GAAG,CAACE,IAAJ,CAASY,WAJK,EAKdd,GAAG,CAACE,IAAJ,CAASa,UALK,EAMdf,GAAG,CAACE,IAAJ,CAASc,MANK,EAOdhB,GAAG,CAACE,IAAJ,CAASe,OAPK,EAQdjB,GAAG,CAACE,IAAJ,CAASgB,UARK,EASdlB,GAAG,CAAC+B,IAAJ,CAASH,EATK,CAzHC;AAAA;AAAA;AAAA,qBAqIQT,eAAGC,KAAH,CAASc,SAAT,EAAoBC,OAApB,CArIR;;AAAA;AAAA;AAqIPd,cAAAA,IArIO,SAqIPA,IArIO;;AAAA,kBAsIVA,IAAI,CAAC,CAAD,CAtIM;AAAA;AAAA;AAAA;;AAAA,gDAuINpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAvIM;;AAAA;AAAA,gDAyIRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAzIQ;;AAAA;AAAA;AAAA;AAAA,gDA2IRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,cA3IQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA8Ib8B,EAAAA,MA9Ia;AAAA;AAAA;AAAA,8CA8INpC,GA9IM,EA8IDC,GA9IC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBA+Ib,CAACD,GAAG,CAACE,IAAJ,CAASmC,YAAV,IAA0B,CAACrC,GAAG,CAACE,IAAJ,CAASoC,SA/IvB;AAAA;AAAA;AAAA;;AAAA,gDAgJRrC,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAhJQ;;AAAA;AAkJXiC,cAAAA,WAlJW,GAmJf,sFAnJe;AAoJjB;;;AAEMC,cAAAA,gBAtJW,GAsJQ,yDAtJR;AAuJXC,cAAAA,cAvJW,GAuJM,uCAvJN;AAwJXC,cAAAA,aAxJW,GAyJf,kFAzJe;AAAA;AAAA;AAAA,qBA2JKvB,eAAGC,KAAH,CAASqB,cAAT,EAAyB,CAACzC,GAAG,CAACE,IAAJ,CAASoC,SAAV,CAAzB,CA3JL;;AAAA;AA2JTK,cAAAA,KA3JS;;AAAA,kBA4JVA,KAAK,CAACtB,IAAN,CAAW,CAAX,CA5JU;AAAA;AAAA;AAAA;;AAAA,gDA6JJpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA7JI;;AAAA;AAAA;AAAA,qBA+JMa,eAAGC,KAAH,CAASoB,gBAAT,EAA0B,CAACxC,GAAG,CAAC+B,IAAJ,CAASH,EAAV,EAAae,KAAK,CAACtB,IAAN,CAAW,CAAX,EAAcO,EAA3B,CAA1B,CA/JN;;AAAA;AAAA;AA+JRP,cAAAA,IA/JQ,SA+JRA,IA/JQ;;AAAA,mBAgKXA,IAAI,CAAC,CAAD,CAhKO;AAAA;AAAA;AAAA;;AAAA,oBAiKTA,IAAI,CAAC,CAAD,CAAJ,CAAQhB,MAAR,IAAkB,GAjKT;AAAA;AAAA;AAAA;;AAAA,gDAkKFJ,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAlKE;;AAAA;AAAA;AAAA;;AAAA;AAqKPsC,cAAAA,OArKO,GAqKG,CAAC,oBAAD,EAAW5C,GAAG,CAAC+B,IAAJ,CAASH,EAApB,EAAwBe,KAAK,CAACtB,IAAN,CAAW,CAAX,EAAcO,EAAtC,EAA0C,GAA1C,CArKH;AAAA;AAAA,qBAsKPT,eAAGC,KAAH,CAASsB,aAAT,EAAwBE,OAAxB,CAtKO;;AAAA;AAwKT;;;;;;AAMAC,cAAAA,OA9KS,GA8KC,CAAC,oBAAD,EAAW7C,GAAG,CAAC+B,IAAJ,CAASH,EAApB,EAAwBe,KAAK,CAACtB,IAAN,CAAW,CAAX,EAAcO,EAAtC,EAA0C5B,GAAG,CAACE,IAAJ,CAASmC,YAAnD,CA9KD;AAAA;AAAA,qBA+KKlB,eAAGC,KAAH,CAASmB,WAAT,EAAsBM,OAAtB,CA/KL;;AAAA;AA+KTC,cAAAA,KA/KS;;AAAA,kBAgLVA,KAAK,CAACzB,IAAN,CAAW,CAAX,CAhLU;AAAA;AAAA;AAAA;;AAAA,gDAiLNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAjLM;;AAAA;AAAA,gDAkLRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAlLQ;;AAAA;AAAA;AAAA;AAAA,gDAoLNL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,cApLM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuLbyC,EAAAA,SAvLa;AAAA;AAAA;AAAA,8CAuLH/C,GAvLG,EAuLEC,GAvLF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAwLX+C,cAAAA,aAxLW,GAwLK,4CAxLL;AAAA;AAAA;AAAA,qBA0LQ7B,eAAGC,KAAH,CAAS4B,aAAT,CA1LR;;AAAA;AAAA;AA0LP3B,cAAAA,IA1LO,SA0LPA,IA1LO;;AAAA,kBA2LVA,IAAI,CAAC,CAAD,CA3LM;AAAA;AAAA;AAAA;;AAAA,gDA4LNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA5LM;;AAAA;AAAA,gDA8LRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgB2B,IAAhB,CAAqBX,IAArB,CA9LQ;;AAAA;AAAA;AAAA;AAAA,gDAgMRpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,cAhMQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmMb2C,EAAAA,OAnMa;AAAA;AAAA;AAAA,8CAmMLjD,GAnMK,EAmMAC,GAnMA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAoMX+C,cAAAA,aApMW,GAoMK,8JApML;AAAA;AAAA;AAAA,qBAsMQ7B,eAAGC,KAAH,CAAS4B,aAAT,EAAuB,CAAChD,GAAG,CAAC+B,IAAJ,CAASH,EAAV,CAAvB,CAtMR;;AAAA;AAAA;AAsMPP,cAAAA,IAtMO,SAsMPA,IAtMO;;AAAA,kBAuMVA,IAAI,CAAC,CAAD,CAvMM;AAAA;AAAA;AAAA;;AAAA,gDAwMNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAxMM;;AAAA;AAAA,gDA0MRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgB2B,IAAhB,CAAqBX,IAArB,CA1MQ;;AAAA;AAAA;AAAA;AAAA,gDA4MRpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,cA5MQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+Mb4C,EAAAA,MA/Ma;AAAA;AAAA;AAAA,8CA+MNlD,GA/MM,EA+MDC,GA/MC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBAgNb,CAACD,GAAG,CAACE,IAAJ,CAASC,KAAV,IAAmB,CAACH,GAAG,CAACE,IAAJ,CAASE,QAhNhB;AAAA;AAAA;AAAA;;AAAA,gDAiNRH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAjNQ;;AAAA;AAmNXkB,cAAAA,IAnNW,GAmNJ,sCAnNI;AAAA;AAAA;AAAA,qBAqNQL,eAAGC,KAAH,CAASI,IAAT,EAAe,CAACxB,GAAG,CAACE,IAAJ,CAASC,KAAV,CAAf,CArNR;;AAAA;AAAA;AAqNPkB,cAAAA,IArNO,SAqNPA,IArNO;;AAAA,kBAsNVA,IAAI,CAAC,CAAD,CAtNM;AAAA;AAAA;AAAA;;AAAA,gDAuNNpB,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAE,2BAAW;AAAb,eAFD,CAvNM;;AAAA;AAAA,oBA2NXe,IAAI,CAAC,CAAD,CAAJ,CAAQjB,QAAR,IAAoBJ,GAAG,CAACE,IAAJ,CAASE,QA3NlB;AAAA;AAAA;AAAA;;AAAA,gDA4NNH,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAE,2BAAW;AAAb,eAFD,CA5NM;;AAAA;AAgOToB,cAAAA,KAhOS,GAgODnB,mBAAOoB,aAAP,CAAqBN,IAAI,CAAC,CAAD,CAAJ,CAAQO,EAA7B,CAhOC;AAAA,gDAiOR3B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEoB,gBAAAA,KAAK,EAALA;AAAF,eAArB,CAjOQ;;AAAA;AAAA;AAAA;AAAA,gDAmORzB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,cAnOQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsOb6C,EAAAA,OAtOa;AAAA;AAAA;AAAA,8CAsOLnD,GAtOK,EAsOAC,GAtOA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBAuOb,CAACD,GAAG,CAACE,IAAJ,CAASC,KAAV,IAAmB,CAACH,GAAG,CAACE,IAAJ,CAASE,QAvOhB;AAAA;AAAA;AAAA;;AAAA,gDAwORH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAxOQ;;AAAA;AAAA,kBA0OZC,mBAAOC,YAAP,CAAoBR,GAAG,CAACE,IAAJ,CAASC,KAA7B,CA1OY;AAAA;AAAA;AAAA;;AAAA,gDA2ORF,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAE,2BAAW;AAAb,eAFD,CA3OQ;;AAAA;AA+OXG,cAAAA,YA/OW,GA+OIF,mBAAOE,YAAP,CAAoBT,GAAG,CAACE,IAAJ,CAASE,QAA7B,CA/OJ;AAgPXM,cAAAA,WAhPW,GAgPG,gHAhPH;AAiPXC,cAAAA,MAjPW,GAiPF,CACb,oBADa,EAEbX,GAAG,CAACE,IAAJ,CAASkD,IAFI,EAGbpD,GAAG,CAACE,IAAJ,CAASC,KAHI,EAIbH,GAAG,CAACE,IAAJ,CAASe,OAJI,EAKbR,YALa,EAMbT,GAAG,CAAC+B,IAAJ,CAASH,EANI,CAjPE;AAAA;AAAA;AAAA,qBA2PQT,eAAGC,KAAH,CAASV,WAAT,EAAsBC,MAAtB,CA3PR;;AAAA;AAAA;AA2PPU,cAAAA,IA3PO,SA2PPA,IA3PO;;AAAA,mBA4PXA,IAAI,CAAC,CAAD,CA5PO;AAAA;AAAA;AAAA;;AAAA,gDA6PNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAU;AAAZ,eAArB,CA7PM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,oBA+PX,aAAMgB,OAAN,KAAkB,kBA/PP;AAAA;AAAA;AAAA;;AAAA,gDAgQNrB,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAE,2BAAW;AAAb,eAFD,CAhQM;;AAAA;AAAA,gDAoQRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,cApQQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuQb+C,EAAAA,QAvQa;AAAA;AAAA;AAAA,+CAuQJrD,GAvQI,EAuQCC,GAvQD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAwQX+C,cAAAA,aAxQW,GAwQK,2CAxQL;AAAA;AAAA;AAAA,qBA0QQ7B,eAAGC,KAAH,CAAS4B,aAAT,EAAuB,CAAChD,GAAG,CAAC+B,IAAJ,CAASH,EAAV,CAAvB,CA1QR;;AAAA;AAAA;AA0QPP,cAAAA,IA1QO,UA0QPA,IA1QO;;AAAA,kBA2QVA,IAAI,CAAC,CAAD,CA3QM;AAAA;AAAA;AAAA;;AAAA,iDA4QNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA5QM;;AAAA;AAAA,iDA8QRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgB2B,IAAhB,CAAqBX,IAArB,CA9QQ;;AAAA;AAAA;AAAA;AAAA,iDAgRRpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eAhRQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmRbgD,EAAAA,WAnRa;AAAA;AAAA;AAAA,+CAmRDtD,GAnRC,EAmRIC,GAnRJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAoRXsD,cAAAA,oBApRW,GAoRY,mDApRZ;AAAA;AAAA;AAAA,qBAsRTpC,eAAGC,KAAH,CAASmC,oBAAT,EAA8B,CAACvD,GAAG,CAAC+B,IAAJ,CAASH,EAAV,EAAa5B,GAAG,CAACwD,MAAJ,CAAWC,MAAxB,CAA9B,CAtRS;;AAAA;AAAA,iDAuRRxD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAvRQ;;AAAA;AAAA;AAAA;AAAA,iDAyRRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eAzRQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4RboD,EAAAA,WA5Ra;AAAA;AAAA;AAAA,+CA4RD1D,GA5RC,EA4RIC,GA5RJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBA6Rb,CAACD,GAAG,CAACE,IAAJ,CAASC,KAAV,IAAmB,CAACH,GAAG,CAACE,IAAJ,CAASE,QA7RhB;AAAA;AAAA;AAAA;;AAAA,iDA8RRH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA9RQ;;AAAA;AAAA,kBAgSZC,mBAAOC,YAAP,CAAoBR,GAAG,CAACE,IAAJ,CAASC,KAA7B,CAhSY;AAAA;AAAA;AAAA;;AAAA,iDAiSRF,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAE,2BAAW;AAAb,eAFD,CAjSQ;;AAAA;AAqSXG,cAAAA,YArSW,GAqSIF,mBAAOE,YAAP,CAAoBT,GAAG,CAACE,IAAJ,CAASE,QAA7B,CArSJ;AAsSXM,cAAAA,WAtSW,GAsSG,+GAtSH;AAuSXC,cAAAA,MAvSW,GAuSF,CACb,oBADa,EAEbX,GAAG,CAACE,IAAJ,CAASkD,IAFI,EAGbpD,GAAG,CAACE,IAAJ,CAASC,KAHI,EAIbH,GAAG,CAACE,IAAJ,CAASe,OAJI,EAKbR,YALa,EAMbT,GAAG,CAAC+B,IAAJ,CAASH,EANI,CAvSE;AAAA;AAAA;AAAA,qBAiTQT,eAAGC,KAAH,CAASV,WAAT,EAAsBC,MAAtB,CAjTR;;AAAA;AAAA;AAiTPU,cAAAA,IAjTO,UAiTPA,IAjTO;;AAAA,mBAkTXA,IAAI,CAAC,CAAD,CAlTO;AAAA;AAAA;AAAA;;AAAA,iDAmTNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAU;AAAZ,eAArB,CAnTM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,oBAqTX,cAAMgB,OAAN,KAAkB,kBArTP;AAAA;AAAA;AAAA;;AAAA,iDAsTNrB,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAE,2BAAW;AAAb,eAFD,CAtTM;;AAAA;AAAA,iDA0TRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eA1TQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA6TbqD,EAAAA,YA7Ta;AAAA;AAAA;AAAA,+CA6TA3D,GA7TA,EA6TKC,GA7TL;AAAA;;AAAA;AAAA;AAAA;AAAA;AA8TX2D,cAAAA,iBA9TW,GA8TS,0CA9TT;AAAA;AAAA;AAAA,qBAgUQzC,eAAGC,KAAH,CAASwC,iBAAT,EAA2B,CAAC5D,GAAG,CAAC+B,IAAJ,CAASH,EAAV,CAA3B,CAhUR;;AAAA;AAAA;AAgUPP,cAAAA,IAhUO,UAgUPA,IAhUO;;AAAA,kBAiUVA,IAAI,CAAC,CAAD,CAjUM;AAAA;AAAA;AAAA;;AAAA,iDAkUNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAlUM;;AAAA;AAAA,iDAoURL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgB2B,IAAhB,CAAqBX,IAArB,CApUQ;;AAAA;AAAA;AAAA;AAAA,iDAsURpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eAtUQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyUbuD,EAAAA,eAzUa;AAAA;AAAA;AAAA,+CAyUG7D,GAzUH,EAyUQC,GAzUR;AAAA;AAAA;AAAA;AAAA;AAAA;AA0UXsD,cAAAA,oBA1UW,GA0UY,kDA1UZ;AAAA;AAAA;AAAA,qBA4UTpC,eAAGC,KAAH,CAASmC,oBAAT,EAA8B,CAACvD,GAAG,CAAC+B,IAAJ,CAASH,EAAV,EAAa5B,GAAG,CAACwD,MAAJ,CAAWM,UAAxB,CAA9B,CA5US;;AAAA;AAAA,iDA6UR7D,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA7UQ;;AAAA;AAAA;AAAA;AAAA,iDA+URL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eA/UQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkVbyD,EAAAA,MAlVa;AAAA;AAAA;AAAA,+CAkVN/D,GAlVM,EAkVDC,GAlVC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBAmVb,CAACD,GAAG,CAACE,IAAJ,CAASC,KAAV,IAAmB,CAACH,GAAG,CAACE,IAAJ,CAASE,QAnVhB;AAAA;AAAA;AAAA;;AAAA,iDAoVRH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CApVQ;;AAAA;AAsVXkB,cAAAA,IAtVW,GAsVJ,0CAtVI;AAAA;AAAA;AAAA,qBAwVQL,eAAGC,KAAH,CAASI,IAAT,EAAe,CAACxB,GAAG,CAACE,IAAJ,CAASC,KAAV,CAAf,CAxVR;;AAAA;AAAA;AAwVPkB,cAAAA,IAxVO,UAwVPA,IAxVO;;AAAA,kBAyVVA,IAAI,CAAC,CAAD,CAzVM;AAAA;AAAA;AAAA;;AAAA,iDA0VNpB,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAE,2BAAW;AAAb,eAFD,CA1VM;;AAAA;AAAA,kBA8VVC,mBAAOkB,eAAP,CAAuBJ,IAAI,CAAC,CAAD,CAAJ,CAAQjB,QAA/B,EAAyCJ,GAAG,CAACE,IAAJ,CAASE,QAAlD,CA9VU;AAAA;AAAA;AAAA;;AAAA,iDA+VNH,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAE,2BAAW;AAAb,eAFD,CA/VM;;AAAA;AAmWToB,cAAAA,KAnWS,GAmWDnB,mBAAOoB,aAAP,CAAqBN,IAAI,CAAC,CAAD,CAAJ,CAAQO,EAA7B,CAnWC;AAAA,iDAoWR3B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEoB,gBAAAA,KAAK,EAALA;AAAF,eAArB,CApWQ;;AAAA;AAAA;AAAA;AAAA,iDAsWRzB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eAtWQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyWb0D,EAAAA,QAzWa;AAAA;AAAA;AAAA,+CAyWJhE,GAzWI,EAyWCC,GAzWD;AAAA;;AAAA;AAAA;AAAA;AAAA;AA0WX6B,cAAAA,YA1WW,GA0WI,qCA1WJ;AAAA;AAAA;AAAA,qBA4WQX,eAAGC,KAAH,CAASU,YAAT,EAAuB,CAAC9B,GAAG,CAAC+B,IAAJ,CAASH,EAAV,CAAvB,CA5WR;;AAAA;AAAA;AA4WPP,cAAAA,IA5WO,UA4WPA,IA5WO;;AAAA,kBA6WVA,IAAI,CAAC,CAAD,CA7WM;AAAA;AAAA;AAAA;;AAAA,iDA8WNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA9WM;;AAAA;AAAA,iDAgXRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgB2B,IAAhB,CAAqBX,IAAI,CAAC,CAAD,CAAzB,CAhXQ;;AAAA;AAAA;AAAA;AAAA,iDAkXRpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eAlXQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqXb2D,EAAAA,SArXa;AAAA;AAAA;AAAA,+CAqXHjE,GArXG,EAqXEC,GArXF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAsXXiE,cAAAA,aAtXW,GAsXK,gHAtXL;AAAA;AAAA;AAAA,qBAwXQ/C,eAAGC,KAAH,CAAS8C,aAAT,EAAuB,CAAClE,GAAG,CAAC+B,IAAJ,CAASH,EAAV,CAAvB,CAxXR;;AAAA;AAAA;AAwXPP,cAAAA,IAxXO,UAwXPA,IAxXO;;AAAA,kBAyXVA,IAAI,CAAC,CAAD,CAzXM;AAAA;AAAA;AAAA;;AAAA,iDA0XNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA1XM;;AAAA;AAAA,iDA4XRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgB2B,IAAhB,CAAqBX,IAArB,CA5XQ;;AAAA;AAAA;AAAA;AAAA,iDA8XRpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eA9XQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiYb6D,EAAAA,YAjYa;AAAA;AAAA;AAAA,+CAiYAnE,GAjYA,EAiYKC,GAjYL;AAAA;;AAAA;AAAA;AAAA;AAAA;AAkYXiE,cAAAA,aAlYW,GAkYG,yDAlYH;AAmYXE,cAAAA,gBAnYW,GAmYQ,2CAnYR;AAAA;AAAA;AAAA,qBAqYQjD,eAAGC,KAAH,CAAS8C,aAAT,EAAuB,CAAClE,GAAG,CAAC+B,IAAJ,CAASH,EAAV,EAAa5B,GAAG,CAACwD,MAAJ,CAAWa,OAAxB,CAAvB,CArYR;;AAAA;AAAA;AAqYPhD,cAAAA,IArYO,UAqYPA,IArYO;;AAAA,kBAsYVA,IAAI,CAAC,CAAD,CAtYM;AAAA;AAAA;AAAA;;AAAA,iDAuYNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAvYM;;AAAA;AAAA,oBAyYXe,IAAI,CAAC,CAAD,CAAJ,CAAQhB,MAAR,IAAgB,GAzYL;AAAA;AAAA;AAAA;;AAAA,iDA0YNJ,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA1YM;;AAAA;AAAA;AAAA,qBA4YTa,eAAGC,KAAH,CAASgD,gBAAT,EAA0B,CAAC,GAAD,EAAK/C,IAAI,CAAC,CAAD,CAAJ,CAAQO,EAAb,CAA1B,CA5YS;;AAAA;AAAA,iDA6YR3B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA7YQ;;AAAA;AAAA;AAAA;AAAA,iDA+YRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eA/YQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkZbgE,EAAAA,UAlZa;AAAA;AAAA;AAAA,+CAkZFtE,GAlZE,EAkZGC,GAlZH;AAAA;;AAAA;AAAA;AAAA;AAAA;AAmZXsE,cAAAA,aAnZW,GAoZf,2EApZe;AAAA;AAAA;AAAA,qBAsZQpD,eAAGC,KAAH,CAASmD,aAAT,EAAwB,CAACvE,GAAG,CAAC+B,IAAJ,CAASH,EAAV,CAAxB,CAtZR;;AAAA;AAAA;AAsZPP,cAAAA,IAtZO,UAsZPA,IAtZO;;AAAA,kBAuZVA,IAAI,CAAC,CAAD,CAvZM;AAAA;AAAA;AAAA;;AAAA,iDAwZNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAxZM;;AAAA;AAAA,iDA0ZRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgB2B,IAAhB,CAAqBX,IAArB,CA1ZQ;;AAAA;AAAA;AAAA;AAAA,iDA4ZRpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eA5ZQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+ZbkE,EAAAA,YA/Za;AAAA;AAAA;AAAA,+CA+ZAxE,GA/ZA,EA+ZKC,GA/ZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAgaZD,GAAG,CAACE,IAAJ,CAASG,MAhaG;AAAA;AAAA;AAAA;;AAAA,iDAiaRJ,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAjaQ;;AAAA;AAmaXmE,cAAAA,iBAnaW,GAoaf,mEApae;AAqaXC,cAAAA,OAraW,GAqaH,CACZ1E,GAAG,CAACE,IAAJ,CAASG,MADG,EAEZL,GAAG,CAAC+B,IAAJ,CAASH,EAFG,EAGZ5B,GAAG,CAACwD,MAAJ,CAAWmB,SAHC,CAraG;AAAA;AAAA;AAAA,qBA2aTxD,eAAGC,KAAH,CAASqD,iBAAT,EAA4BC,OAA5B,CA3aS;;AAAA;AAAA,iDA4aRzE,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA5aQ;;AAAA;AAAA;AAAA;AAAA,iDA8aRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eA9aQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAibbsE,EAAAA,SAjba;AAAA;AAAA;AAAA,+CAibH5E,GAjbG,EAibEC,GAjbF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAkbX4E,cAAAA,QAlbW,GAkbA,8FAlbA;AAAA;AAAA;AAAA,qBAobQ1D,eAAGC,KAAH,CAASyD,QAAT,EAAkB,CAAC7E,GAAG,CAAC+B,IAAJ,CAASH,EAAV,CAAlB,CApbR;;AAAA;AAAA;AAobPP,cAAAA,IApbO,UAobPA,IApbO;;AAAA,kBAqbVA,IAAI,CAAC,CAAD,CArbM;AAAA;AAAA;AAAA;;AAAA,iDAsbNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAtbM;;AAAA;AAAA,iDAwbRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgB2B,IAAhB,CAAqBX,IAArB,CAxbQ;;AAAA;AAAA;AAAA;AAAA,iDA0bRpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eA1bQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA6bbwE,EAAAA,MA7ba;AAAA;AAAA;AAAA,+CA6bN9E,GA7bM,EA6bDC,GA7bC;AAAA;;AAAA;AAAA;AAAA;AAAA;AA8bX8E,cAAAA,WA9bW,GA8bG,kDA9bH;AA+bXC,cAAAA,aA/bW,GAgcf,oHAhce;AAicXC,cAAAA,eAjcW,GAkcf,4DAlce;AAmcXC,cAAAA,gBAncW,GAocf,yEApce;AAqcXC,cAAAA,gBArcW,GAscf,6CAtce;AAucXC,cAAAA,OAvcW,GAucD,CAACpF,GAAG,CAACE,IAAJ,CAASmF,MAAV,EAAiB,GAAjB,EAAsBrF,GAAG,CAACwD,MAAJ,CAAWmB,SAAjC,CAvcC;AAAA;AAAA;AAAA,qBAycTxD,eAAGC,KAAH,CAAS2D,WAAT,EAAsBK,OAAtB,CAzcS;;AAAA;AAAA;AAAA,qBA0cMjE,eAAGC,KAAH,CAAS4D,aAAT,EAAuB,CAAChF,GAAG,CAACwD,MAAJ,CAAWmB,SAAZ,CAAvB,CA1cN;;AAAA;AAAA;AA0cRtD,cAAAA,IA1cQ,UA0cRA,IA1cQ;;AAAA,kBA2cVA,IAAI,CAAC,CAAD,CA3cM;AAAA;AAAA;AAAA;;AAAA,iDA4cNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA5cM;;AAAA;AAAA;AAAA,qBA8cKa,eAAGC,KAAH,CAAS6D,eAAT,EAAyB,CAAC5D,IAAI,CAAC,CAAD,CAAJ,CAAQN,UAAT,EAAoBf,GAAG,CAAC+B,IAAJ,CAASH,EAA7B,CAAzB,CA9cL;;AAAA;AA8cTe,cAAAA,KA9cS;;AAAA,kBA+cTA,KAAK,CAACtB,IAAN,CAAW,CAAX,CA/cS;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAgdLF,eAAGC,KAAH,CAAS8D,gBAAT,EAA0B,CAAC,oBAAD,EAAU7D,IAAI,CAAC,CAAD,CAAJ,CAAQN,UAAlB,EAA6BM,IAAI,CAAC,CAAD,CAAJ,CAAQgE,MAArC,EAA4CrF,GAAG,CAAC+B,IAAJ,CAASH,EAArD,CAA1B,CAhdK;;AAAA;AAAA;AAAA;;AAAA;AAkdP0D,cAAAA,YAldO,GAkdQjE,IAAI,CAAC,CAAD,CAAJ,CAAQgE,MAAR,GAAe1C,KAAK,CAACtB,IAAN,CAAW,CAAX,EAAcgE,MAldrC;AAAA;AAAA,qBAmdLlE,eAAGC,KAAH,CAAS+D,gBAAT,EAA0B,CAACG,YAAD,EAAc3C,KAAK,CAACtB,IAAN,CAAW,CAAX,EAAcO,EAA5B,CAA1B,CAndK;;AAAA;AAAA,iDAqdR3B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CArdQ;;AAAA;AAAA;AAAA;AAAA,iDAudRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eAvdQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0dbiF,EAAAA,WA1da;AAAA;AAAA;AAAA,+CA0dDvF,GA1dC,EA0dIC,GA1dJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AA2dX+E,cAAAA,aA3dW,GA4df,2CA5de;AAAA;AAAA;AAAA,qBA8dQ7D,eAAGC,KAAH,CAAS4D,aAAT,EAAwB,CAAChF,GAAG,CAAC+B,IAAJ,CAASH,EAAV,CAAxB,CA9dR;;AAAA;AAAA;AA8dPP,cAAAA,IA9dO,UA8dPA,IA9dO;;AAAA,kBA+dVA,IAAI,CAAC,CAAD,CA/dM;AAAA;AAAA;AAAA;;AAAA,iDAgeNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAheM;;AAAA;AAAA,iDAkeRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgB2B,IAAhB,CAAqBX,IAArB,CAleQ;;AAAA;AAAA;AAAA;AAAA,iDAoeRpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eApeQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuebkF,EAAAA,SAvea;AAAA;AAAA;AAAA,+CAueHxF,GAveG,EAueEC,GAveF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAweXwF,cAAAA,cAxeW,GAyef,sDAzee;AAAA;AAAA;AAAA,qBA2eQtE,eAAGC,KAAH,CAASqE,cAAT,EAAyB,CAACzF,GAAG,CAAC+B,IAAJ,CAASH,EAAV,CAAzB,CA3eR;;AAAA;AAAA;AA2ePP,cAAAA,IA3eO,UA2ePA,IA3eO;;AAAA,kBA4eVA,IAAI,CAAC,CAAD,CA5eM;AAAA;AAAA;AAAA;;AAAA,iDA6eNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA7eM;;AAAA;AAAA,iDA+eRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgB2B,IAAhB,CAAqBX,IAArB,CA/eQ;;AAAA;AAAA;AAAA;AAAA,iDAifRpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eAjfQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAofboF,EAAAA,cApfa;AAAA;AAAA;AAAA,+CAofE1F,GApfF,EAofOC,GApfP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAqfX0F,cAAAA,mBArfW,GAsff,sDAtfe;AAAA;AAAA;AAAA,qBAwfQxE,eAAGC,KAAH,CAASuE,mBAAT,EAA8B,CAAC3F,GAAG,CAAC+B,IAAJ,CAASH,EAAV,CAA9B,CAxfR;;AAAA;AAAA;AAwfPP,cAAAA,IAxfO,UAwfPA,IAxfO;;AAAA,kBAyfVA,IAAI,CAAC,CAAD,CAzfM;AAAA;AAAA;AAAA;;AAAA,iDA0fNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA1fM;;AAAA;AAAA,iDA4fRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgB2B,IAAhB,CAAqBX,IAArB,CA5fQ;;AAAA;AAAA;AAAA;AAAA,iDA8fRpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eA9fQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAigBbsF,EAAAA,WAjgBa;AAAA;AAAA;AAAA,+CAigBD5F,GAjgBC,EAigBIC,GAjgBJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAkgBX4F,cAAAA,gBAlgBW,GAmgBf,oEAngBe;AAogBXtB,cAAAA,aApgBW,GAqgBf,kCArgBe;AAsgBXU,cAAAA,eAtgBW,GAugBf,4DAvgBe;AAwgBXE,cAAAA,gBAxgBW,GAygBf,6CAzgBe;AA0gBXT,cAAAA,OA1gBW,GA0gBH,CACZ1E,GAAG,CAACE,IAAJ,CAASG,MADG,EAEZL,GAAG,CAAC+B,IAAJ,CAASH,EAFG,EAGZ5B,GAAG,CAACwD,MAAJ,CAAWsC,OAHC,CA1gBG;AAAA;AAAA;AAAA,qBAghBT3E,eAAGC,KAAH,CAASyE,gBAAT,EAA2BnB,OAA3B,CAhhBS;;AAAA;AAAA;AAAA,qBAihBQvD,eAAGC,KAAH,CAASmD,aAAT,EAAwB,CAACvE,GAAG,CAACwD,MAAJ,CAAWsC,OAAZ,CAAxB,CAjhBR;;AAAA;AAAA;AAihBPzE,cAAAA,IAjhBO,UAihBPA,IAjhBO;;AAAA,kBAkhBVA,IAAI,CAAC,CAAD,CAlhBM;AAAA;AAAA;AAAA;;AAAA,iDAmhBNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAnhBM;;AAAA;AAAA,oBAqhBXe,IAAI,CAAC,CAAD,CAAJ,CAAQhB,MAAR,IAAkB,GArhBP;AAAA;AAAA;AAAA;;AAAA,iDAshBNJ,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAthBM;;AAAA;AAAA,oBAuhBXe,IAAI,CAAC,CAAD,CAAJ,CAAQhB,MAAR,IAAkB,GAvhBP;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAwhBOc,eAAGC,KAAH,CAAS6D,eAAT,EAAyB,CAAC5D,IAAI,CAAC,CAAD,CAAJ,CAAQ0E,SAAT,EAAmB/F,GAAG,CAAC+B,IAAJ,CAASH,EAA5B,CAAzB,CAxhBP;;AAAA;AAwhBPe,cAAAA,KAxhBO;;AAAA,kBAyhBTA,KAAK,CAACtB,IAAN,CAAW,CAAX,CAzhBS;AAAA;AAAA;AAAA;;AAAA,iDA0hBJpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAW;AAAZ,eAArB,CA1hBI;;AAAA;AA4hBPgF,cAAAA,YA5hBO,GA4hBQ3C,KAAK,CAACtB,IAAN,CAAW,CAAX,EAAcgE,MAAd,GAAqBhE,IAAI,CAAC,CAAD,CAAJ,CAAQgE,MA5hBrC;AAAA;AAAA,qBA6hBLlE,eAAGC,KAAH,CAAS+D,gBAAT,EAA0B,CAACG,YAAD,EAAc3C,KAAK,CAACtB,IAAN,CAAW,CAAX,EAAcO,EAA5B,CAA1B,CA7hBK;;AAAA;AAAA,iDA+hBN3B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA/hBM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,iDAkiBRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eAliBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqiBb0F,EAAAA,MAriBa;AAAA;AAAA;AAAA,+CAqiBNhG,GAriBM,EAqiBDC,GAriBC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBAsiBb,CAACD,GAAG,CAACE,IAAJ,CAASC,KAAV,IAAmB,CAACH,GAAG,CAACE,IAAJ,CAASE,QAtiBhB;AAAA;AAAA;AAAA;;AAAA,iDAuiBRH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAviBQ;;AAAA;AAyiBXkB,cAAAA,IAziBW,GAyiBJ,yCAziBI;AAAA;AAAA;AAAA,qBA2iBQL,eAAGC,KAAH,CAASI,IAAT,EAAe,CAACxB,GAAG,CAACE,IAAJ,CAASC,KAAV,CAAf,CA3iBR;;AAAA;AAAA;AA2iBPkB,cAAAA,IA3iBO,UA2iBPA,IA3iBO;;AAAA,kBA4iBVA,IAAI,CAAC,CAAD,CA5iBM;AAAA;AAAA;AAAA;;AAAA,iDA6iBNpB,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAE,2BAAW;AAAb,eAFD,CA7iBM;;AAAA;AAAA,kBAijBVC,mBAAOkB,eAAP,CAAuBJ,IAAI,CAAC,CAAD,CAAJ,CAAQjB,QAA/B,EAAyCJ,GAAG,CAACE,IAAJ,CAASE,QAAlD,CAjjBU;AAAA;AAAA;AAAA;;AAAA,iDAkjBNH,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAE,2BAAW;AAAb,eAFD,CAljBM;;AAAA;AAsjBToB,cAAAA,KAtjBS,GAsjBDnB,mBAAOoB,aAAP,CAAqBN,IAAI,CAAC,CAAD,CAAJ,CAAQO,EAA7B,CAtjBC;AAAA,iDAujBR3B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEoB,gBAAAA,KAAK,EAALA;AAAF,eAArB,CAvjBQ;;AAAA;AAAA;AAAA;AAAA,iDAyjBRzB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eAzjBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4jBb2F,EAAAA,QA5jBa;AAAA;AAAA;AAAA,+CA4jBJjG,GA5jBI,EA4jBCC,GA5jBD;AAAA;;AAAA;AAAA;AAAA;AAAA;AA6jBX6B,cAAAA,YA7jBW,GA6jBI,oCA7jBJ;AAAA;AAAA;AAAA,qBA+jBQX,eAAGC,KAAH,CAASU,YAAT,EAAuB,CAAC9B,GAAG,CAAC+B,IAAJ,CAASH,EAAV,CAAvB,CA/jBR;;AAAA;AAAA;AA+jBPP,cAAAA,IA/jBO,UA+jBPA,IA/jBO;;AAAA,kBAgkBVA,IAAI,CAAC,CAAD,CAhkBM;AAAA;AAAA;AAAA;;AAAA,iDAikBNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAjkBM;;AAAA;AAAA,iDAmkBRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgB2B,IAAhB,CAAqBX,IAAI,CAAC,CAAD,CAAzB,CAnkBQ;;AAAA;AAAA;AAAA;AAAA,iDAqkBRpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eArkBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAwkBb4F,EAAAA,KAxkBa;AAAA;AAAA;AAAA,+CAwkBPlG,GAxkBO,EAwkBFC,GAxkBE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAykBXwC,cAAAA,cAzkBW,GAykBM,uCAzkBN;AA0kBX0D,cAAAA,UA1kBW,GA2kBf,0GA3kBe;AAAA;AAAA;AAAA,qBA6kBKhF,eAAGC,KAAH,CAASqB,cAAT,EAAyB,CAACzC,GAAG,CAACE,IAAJ,CAASoC,SAAV,CAAzB,CA7kBL;;AAAA;AA6kBTK,cAAAA,KA7kBS;;AAAA,kBA8kBVA,KAAK,CAACtB,IAAN,CAAW,CAAX,CA9kBU;AAAA;AAAA;AAAA;;AAAA,iDA+kBJpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA/kBI;;AAAA;AAilBT8F,cAAAA,OAjlBS,GAilBC,CACd,oBADc,EAEdpG,GAAG,CAACE,IAAJ,CAAS6F,SAFK,EAGd/F,GAAG,CAACE,IAAJ,CAASmF,MAHK,EAIdrF,GAAG,CAAC+B,IAAJ,CAASH,EAJK,EAKde,KAAK,CAACtB,IAAN,CAAW,CAAX,EAAcO,EALA,EAMd,GANc,CAjlBD;AAAA;AAAA,qBAylBQT,eAAGC,KAAH,CAAS+E,UAAT,EAAqBC,OAArB,CAzlBR;;AAAA;AAAA;AAylBP/E,cAAAA,IAzlBO,UAylBPA,IAzlBO;;AAAA,kBA0lBVA,IAAI,CAAC,CAAD,CA1lBM;AAAA;AAAA;AAAA;;AAAA,iDA2lBNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA3lBM;;AAAA;AAAA,iDA6lBRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA7lBQ;;AAAA;AAAA;AAAA;AAAA,iDA+lBRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eA/lBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkmBb+F,EAAAA,SAlmBa;AAAA;AAAA;AAAA,+CAkmBHrG,GAlmBG,EAkmBEC,GAlmBF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAmmBXqG,cAAAA,cAnmBW,GAomBf,2CApmBe;AAAA;AAAA;AAAA,qBAsmBQnF,eAAGC,KAAH,CAASkF,cAAT,EAAyB,CAACtG,GAAG,CAAC+B,IAAJ,CAASH,EAAV,CAAzB,CAtmBR;;AAAA;AAAA;AAsmBPP,cAAAA,IAtmBO,UAsmBPA,IAtmBO;;AAAA,kBAumBVA,IAAI,CAAC,CAAD,CAvmBM;AAAA;AAAA;AAAA;;AAAA,iDAwmBNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAxmBM;;AAAA;AAAA,iDA0mBRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgB2B,IAAhB,CAAqBX,IAArB,CA1mBQ;;AAAA;AAAA;AAAA;AAAA,iDA4mBRpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eA5mBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+mBbiG,EAAAA,SA/mBa;AAAA;AAAA;AAAA,+CA+mBHvG,GA/mBG,EA+mBEC,GA/mBF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAgnBXkG,cAAAA,UAhnBW,GAinBf,iFAjnBe;AAknBXC,cAAAA,OAlnBW,GAknBD,CACdpG,GAAG,CAACE,IAAJ,CAAS6F,SADK,EAEd/F,GAAG,CAACE,IAAJ,CAASmF,MAFK,EAGdrF,GAAG,CAAC+B,IAAJ,CAASH,EAHK,EAId5B,GAAG,CAACwD,MAAJ,CAAWsC,OAJG,CAlnBC;AAAA;AAAA;AAAA,qBAynBQ3E,eAAGC,KAAH,CAAS+E,UAAT,EAAqBC,OAArB,CAznBR;;AAAA;AAAA;AAynBP/E,cAAAA,IAznBO,UAynBPA,IAznBO;;AAAA,kBA0nBVA,IAAI,CAAC,CAAD,CA1nBM;AAAA;AAAA;AAAA;;AAAA,iDA2nBNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA3nBM;;AAAA;AAAA,iDA6nBRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA7nBQ;;AAAA;AAAA;AAAA;AAAA,iDA+nBRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eA/nBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkoBbkG,EAAAA,WAloBa;AAAA;AAAA;AAAA,+CAkoBDxG,GAloBC,EAkoBIC,GAloBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAmoBXwG,cAAAA,OAnoBW,GAmoBD,0DAnoBC;AAooBXC,cAAAA,gBApoBW,GAqoBf,gCAroBe;AAsoBXC,cAAAA,OAtoBW,GAsoBD,CACd3G,GAAG,CAACwD,MAAJ,CAAWsC,OADG,EAEd9F,GAAG,CAAC+B,IAAJ,CAASH,EAFK,CAtoBC;AAAA;AAAA;AAAA,qBA2oBKT,eAAGC,KAAH,CAASqF,OAAT,EAAkBE,OAAlB,CA3oBL;;AAAA;AA2oBTC,cAAAA,KA3oBS;;AAAA,kBA4oBVA,KAAK,CAACvF,IAAN,CAAW,CAAX,CA5oBU;AAAA;AAAA;AAAA;;AAAA,iDA6oBNpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CA7oBM;;AAAA;AAAA,oBA+oBXsG,KAAK,CAACvF,IAAN,CAAW,CAAX,KAAiB,GA/oBN;AAAA;AAAA;AAAA;;AAAA,iDA+oBkBpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,2BAAU;AAAX,eAArB,CA/oBlB;;AAAA;AAAA;AAAA,qBAgpBTa,eAAGC,KAAH,CAASsF,gBAAT,EAA2B,CAAC1G,GAAG,CAACwD,MAAJ,CAAWsC,OAAZ,CAA3B,CAhpBS;;AAAA;AAAA,iDAipBR7F,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAjpBQ;;AAAA;AAAA;AAAA;AAAA,iDAmpBRL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,eAnpBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAArB;eAwpBeR,Y",
      "sourceRoot": "/home/duong/Documents/database_project/src",
      "sourcesContent": [
        "import uuidv4 from \"uuid/v4\";\nimport db from \"./db\";\nimport Helper from \"./Helper\";\n\nconst Controllerdb = {\n  /**\n   * Create A donor\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} reflection object\n   */\n  async create(req, res) {\n    if (!req.body.email || !req.body.password) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    if (!Helper.isValidEmail(req.body.email)) {\n      return res\n        .status(400)\n        .send({ 'message': 'Please enter a valid email address' });\n    }\n    const hashPassword = Helper.hashPassword(req.body.password);\n    const createQuery = 'Insert into donors(id,first_name,last_name, email, password, DateOfBirth,blood_type, gender, address, contact_no) VALUES($1, $2, $3, $4, $5, $6, $7, $8, $9, $10) returning *';\n    const values = [\n      uuidv4(),\n      req.body.first_name,\n      req.body.last_name,\n      req.body.email,\n      hashPassword,\n      req.body.DateOfBirth,\n      req.body.blood_type,\n      req.body.gender,\n      req.body.address,\n      req.body.contact_no\n    ];\n\n    try {\n      const { rows } = await db.query(createQuery, values);\n      if (rows[0])\n        return res.status(200).send({ 'Message':'signup successful' });\n    } catch (error) {\n      if (error.routine === \"_bt_check_unique\") {\n        return res\n          .status(400)\n          .send({ 'message': 'Donor with that EMAIL already exist' });\n      }\n      return res.status(400).send(error);\n    }\n  },\n  /**\n   * Login\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} Donor object\n   */\n  async login(req, res) {\n    if (!req.body.email || !req.body.password) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    if (!Helper.isValidEmail(req.body.email)) {\n      return res\n        .status(400)\n        .send({ 'message': 'Please enter a valid email address' });\n    }\n    const text = 'SELECT * FROM donors WHERE email = $1';\n    try {\n      const { rows } = await db.query(text, [req.body.email]);\n      if (!rows[0]) {\n        return res\n          .status(400)\n          .send({ 'message': 'The credentials you provided is incorrect' });\n      }\n      if (!Helper.comparePassword(rows[0].password, req.body.password)) {\n        return res\n          .status(400)\n          .send({ 'message': 'The credentials you provided is incorrect' });\n      }\n      const token = Helper.generateToken(rows[0].id);\n      return res.status(200).send({ token });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  /**\n   * Delete A donor\n   * @param {object} req\n   * @param {object} res\n   * @returns {void} return status code 204\n   */\n  /*async delete(req, res) {\n    const deleteQuery = \"DELETE FROM donor WHERE id=$1 returning *\";\n    try {\n      const { rows } = await db.query(deleteQuery, [req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'donor not found' });\n      }\n      return res.status(204).send({ 'message': 'deleted' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },*/\n  async profile(req, res) {\n    const profileQuery = 'Select * FROM donors WHERE id=$1';\n    try {\n      const { rows } = await db.query(profileQuery, [req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'donor not found'});\n      }\n      else {\n        return res.status(200).json(rows[0]);\n      }\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async edit(req, res) {\n    if (!req.body.email) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    if (!Helper.isValidEmail(req.body.email)) {\n      return res\n        .status(400)\n        .send({ 'message': 'Please enter a valid email address' });\n    }\n    const editQuery =\n      \"Update donors set first_name=$1,last_name=$2, email=$3, DateOfBirth=$4,blood_type=$5, gender=$6, address=$7, contact_no=$8 where id=$9 returning *\";\n    const values0 = [\n      req.body.first_name,\n      req.body.last_name,\n      req.body.email,\n      req.body.DateOfBirth,\n      req.body.blood_type,\n      req.body.gender,\n      req.body.address,\n      req.body.contact_no,\n      req.user.id\n    ];\n    try {\n      const { rows } = await db.query(editQuery, values0);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'donor not found' });\n      }\n      return res.status(200).send({ 'message': 'updated' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async donate(req, res) {\n    if (!req.body.DateOfDonate || !req.body.bank_name) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    const donateQuery =\n      \"Insert into blood(id,donor_id,bank_id,DateOfDonate) values ($1,$2,$3,$4) returning *\";\n    /* const checkdateQuery =\n      \"Select DateOfDonate,count(*) as k from blood where DateOfDonate=$1 group by DateOfDonate\";*/\n    const checkstatusQuery = \"Select * from register where donor_id=$1 and bank_id=$2\";\n    const checkbankQuery = \"Select * from BloodBank where name=$1\"\n    const registerQuery =\n      \"Insert into register(id,donor_id,bank_id,status) values($1,$2,$3,$4) returning *\";\n    try {\n      const rows0 = await db.query(checkbankQuery, [req.body.bank_name]);\n      if (!rows0.rows[0]) {\n          return res.status(404).send({ 'message': 'bank name not found' });\n      }\n      const {rows} = await db.query(checkstatusQuery,[req.user.id,rows0.rows[0].id]);\n      if (rows[0]){ \n        if (rows[0].status == \"B\")\n            return res.status(400).send({ 'message': 'donors banned' });\n      }\n      else {\n        const values1 = [uuidv4(), req.user.id, rows0.rows[0].id ,'A'];\n        await db.query(registerQuery, values1)\n      }\n            /*\n            const rows0 = await db.query(checkdateQuery,[req.body.DateOfDonate]).rows;\n            if (rows0[0]) {\n              if (rows0[0].k > 1000)\n                return res.status(400).send({ 'message': 'date not availabe,too many people' });\n                */\n      const values2 = [uuidv4(), req.user.id, rows0.rows[0].id, req.body.DateOfDonate];\n      const rows1 = await db.query(donateQuery, values2);\n      if (!rows1.rows[0]) \n        return res.status(404).send({ 'message': 'donor not found' });\n      return res.status(200).send({ 'message': 'donate time setted' });\n    } catch (error) {\n        return res.status(400).send(error);\n    }\n  },\n  async dgetbanks(req, res) {\n    const getbanksQuery = \"Select name, address, email from BloodBank\";\n    try {\n      const { rows } = await db.query(getbanksQuery);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'banks record cannot be getted' });\n      }\n      return res.status(200).json(rows);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async history(req, res) {\n    const getbanksQuery = \"Select DateOfDonate,Amount,name from blood inner join BloodBank on blood.bank_id=BloodBank.id where donor_id=$1 and amount is not null order by DateOfDonate\";\n    try {\n      const { rows } = await db.query(getbanksQuery,[req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'no record' });\n      }\n      return res.status(200).json(rows);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async alogin(req, res) {\n    if (!req.body.email || !req.body.password) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    const text = \"SELECT * FROM admin WHERE email = $1\";\n    try {\n      const { rows } = await db.query(text, [req.body.email]);\n      if (!rows[0]) {\n        return res\n          .status(400)\n          .send({ 'message': 'The credentials you provided is incorrect' });\n      }\n      if (rows[0].password != req.body.password) {\n        return res\n          .status(400)\n          .send({ 'message': 'The password you provided is incorrect' });\n      }\n      const token = Helper.generateToken(rows[0].id);\n      return res.status(200).send({ token });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async addbank(req, res) {\n    if (!req.body.email || !req.body.password) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    if (!Helper.isValidEmail(req.body.email)) {\n      return res\n        .status(400)\n        .send({ 'message': 'Please enter a valid email address' });\n    }\n    const hashPassword = Helper.hashPassword(req.body.password);\n    const createQuery = 'Insert into BloodBank(id, name, email, address, password, admin_id) VALUES($1, $2, $3, $4, $5, $6) returning *';\n    const values = [\n      uuidv4(),\n      req.body.name,\n      req.body.email,\n      req.body.address,\n      hashPassword,\n      req.user.id\n    ];\n\n    try {\n      const { rows } = await db.query(createQuery, values);\n      if (rows[0])\n        return res.status(200).send({ 'Message':'add bank successful' });\n    } catch (error) {\n      if (error.routine === \"_bt_check_unique\") {\n        return res\n          .status(400)\n          .send({ 'message': 'bank with that EMAIL already exist' });\n      }\n      return res.status(400).send(error);\n    }\n  },\n  async getbanks(req, res) {\n    const getbanksQuery = \"Select * from BloodBank where admin_id=$1\";\n    try {\n      const { rows } = await db.query(getbanksQuery,[req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'banks record cannot be getted' });\n      }\n      return res.status(200).json(rows);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async deletebanks(req, res) {\n    const deletehospitalsQuery = \"Delete from BloodBank where admin_id=$1 and id=$2\";\n    try {\n      await db.query(deletehospitalsQuery,[req.user.id,req.params.bankid]);\n      return res.status(200).send({ 'message': 'deleted bank record' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async addhospital(req, res) {\n    if (!req.body.email || !req.body.password) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    if (!Helper.isValidEmail(req.body.email)) {\n      return res\n        .status(400)\n        .send({ 'message': 'Please enter a valid email address' });\n    }\n    const hashPassword = Helper.hashPassword(req.body.password);\n    const createQuery = 'Insert into Hospital(id, name, email, address, password, admin_id) VALUES($1, $2, $3, $4, $5, $6) returning *';\n    const values = [\n      uuidv4(),\n      req.body.name,\n      req.body.email,\n      req.body.address,\n      hashPassword,\n      req.user.id\n    ];\n\n    try {\n      const { rows } = await db.query(createQuery, values);\n      if (rows[0])\n        return res.status(200).send({ 'Message':'add hospital successful' });\n    } catch (error) {\n      if (error.routine === \"_bt_check_unique\") {\n        return res\n          .status(400)\n          .send({ 'message': 'hospital with that EMAIL already exist' });\n      }\n      return res.status(400).send(error);\n    }\n  },\n  async gethospitals(req, res) {\n    const gethospitalsQuery = \"Select * from hospital where admin_id=$1\";\n    try {\n      const { rows } = await db.query(gethospitalsQuery,[req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'hospitals record cannot be getted' });\n      }\n      return res.status(200).json(rows);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async deletehospitals(req, res) {\n    const deletehospitalsQuery = \"Delete from Hospital where admin_id=$1 and id=$2\";\n    try {\n      await db.query(deletehospitalsQuery,[req.user.id,req.params.hospitalid]);\n      return res.status(200).send({ 'message': 'deleted hospital record' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async blogin(req, res) {\n    if (!req.body.email || !req.body.password) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    const text = \"SELECT * FROM BloodBank WHERE email = $1\";\n    try {\n      const { rows } = await db.query(text, [req.body.email]);\n      if (!rows[0]) {\n        return res\n          .status(400)\n          .send({ 'message': 'The credentials you provided is incorrect' });\n      }\n      if (!Helper.comparePassword(rows[0].password, req.body.password)) {\n        return res\n          .status(400)\n          .send({ 'message': 'The credentials you provided is incorrect' });\n      }\n      const token = Helper.generateToken(rows[0].id);\n      return res.status(200).send({ token });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async bprofile(req, res) {\n    const profileQuery = \"Select * FROM bloodbank WHERE id=$1\";\n    try {\n      const { rows } = await db.query(profileQuery, [req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'bank not found' });\n      }\n      return res.status(200).json(rows[0]);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async getdonors(req, res) {\n    const getdonorQuery = \"Select donors.* from register inner join donors on register.donor_id=donors.id where bank_id=$1 and status='A'\";\n    try {\n      const { rows } = await db.query(getdonorQuery,[req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'no donors' });\n      }\n      return res.status(200).json(rows);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async deletedonors(req, res) {\n    const getdonorQuery=\"Select * from register where bank_id=$1 and donor_id=$2\"\n    const deletedonorQuery = \"Update register set status=$1 where id=$2\";\n    try {\n      const { rows } = await db.query(getdonorQuery,[req.user.id,req.params.donorid]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'donors record cannot be getted' });\n      }\n      if (rows[0].status=='B'){\n        return res.status(400).send({ 'message': 'donor record already banned' });\n      }\n      await db.query(deletedonorQuery,['B',rows[0].id]);\n      return res.status(200).send({ 'message': 'deleted donor record' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async listdonate(req, res) {\n    const getorderQuery =\n      \"Select * from blood where bank_id=$1 and status='P' order by DateOfDonate\";\n    try {\n      const { rows } = await db.query(getorderQuery, [req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'list donate request not found' });\n      }\n      return res.status(200).json(rows);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async handledonate(req, res) {\n    if (!req.body.status) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    const handledonateQuery =\n      \"Update blood set status=$1 where bank_id=$2 and id=$3 returning *\";\n    const values8=[\n      req.body.status,\n      req.user.id,\n      req.params.donate_id\n    ]\n    try {\n      await db.query(handledonateQuery, values8);\n      return res.status(200).send({ 'message': 'accepted donate' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async getstores(req, res) {\n    const getQuery = \"Select * from blood where bank_id=$1 and amount is null and status='A' order by DateOfDonate\";\n    try {\n      const { rows } = await db.query(getQuery,[req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'blood record cannot be getted' });\n      }\n      return res.status(200).json(rows);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async stores(req, res) {\n    const amountQuery = \"Update blood set amount=$1,status=$2 where id=$3\";\n    const getstoreQuery = \n      \"Select blood_type,amount from blood inner join donors on blood.donor_id=donors.id where blood.id=$1 and status='A'\"\n    const checkstorequery = \n      \"Select * from bloodstore where BloodType=$1 and bank_id=$2\";\n    const insertstoreQuery =\n      \"Insert into Bloodstore(id,BloodType,Amount,bank_id) values($1,$2,$3,$4)\";\n    const updatestoreQuery =\n      \"Update Bloodstore set Amount=$1 where id=$2\";\n    const values4 = [req.body.amount,'R', req.params.donate_id];\n    try {\n      await db.query(amountQuery, values4);\n      const {rows} = await db.query(getstoreQuery,[req.params.donate_id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'already accepted added amount to bloodstore' });\n      }\n      const rows0 = await db.query(checkstorequery,[rows[0].blood_type,req.user.id]);\n        if(!rows0.rows[0]){\n          await db.query(insertstoreQuery,[uuidv4(),rows[0].blood_type,rows[0].amount,req.user.id])\n        } else {\n          var total_amount = rows[0].amount+rows0.rows[0].amount;\n          await db.query(updatestoreQuery,[total_amount,rows0.rows[0].id]);\n        }\n      return res.status(200).send({ 'message': 'updated record stored' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async bloodstores(req, res) {\n    const getstoreQuery = \n      \"Select * from Bloodstore where bank_id=$1\";\n    try {\n      const { rows } = await db.query(getstoreQuery, [req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'no record' });\n      }\n      return res.status(200).json(rows);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async bgetorder(req, res) {\n    const bgetorderQuery =\n      \"Select * from orders where bank_id=$1 and status='A'\";\n    try {\n      const { rows } = await db.query(bgetorderQuery, [req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'no order' });\n      }\n      return res.status(200).json(rows);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async gethandleorder(req, res) {\n    const gethandleorderQuery =\n      \"Select * from orders where bank_id=$1 and status='P'\";\n    try {\n      const { rows } = await db.query(gethandleorderQuery, [req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'no order' });\n      }\n      return res.status(200).json(rows);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async handleorder(req, res) {\n    const handleorderQuery =\n      \"Update orders set status=$1 where bank_id=$2 and id=$3 returning *\";\n    const getorderQuery =\n      \"Select * from orders where id=$1\";\n    const checkstorequery = \n      \"Select * from bloodstore where BloodType=$1 and bank_id=$2\";\n    const updatestoreQuery =\n      \"Update bloodstore set Amount=$1 where id=$2\";\n    const values8=[\n      req.body.status,\n      req.user.id,\n      req.params.orderid\n    ]\n    try {\n      await db.query(handleorderQuery, values8);\n      const { rows } = await db.query(getorderQuery, [req.params.orderid]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'cannot order' });\n      } \n      if (rows[0].status == 'R') \n        return res.status(200).send({ 'message': 'rejected order' });\n      if (rows[0].status == 'A') {\n        const rows0 = await db.query(checkstorequery,[rows[0].bloodtype,req.user.id]);\n        if(!rows0.rows[0]){\n          return res.status(400).send({'Message': 'out of blood'})\n        } else {\n          var total_amount = rows0.rows[0].amount-rows[0].amount;\n          await db.query(updatestoreQuery,[total_amount,rows0.rows[0].id]);\n        }\n        return res.status(200).send({ 'message': 'accepted order' });\n      }\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async hlogin(req, res) {\n    if (!req.body.email || !req.body.password) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    const text = \"SELECT * FROM Hospital WHERE email = $1\";\n    try {\n      const { rows } = await db.query(text, [req.body.email]);\n      if (!rows[0]) {\n        return res\n          .status(400)\n          .send({ 'message': 'The credentials you provided is incorrect' });\n      }\n      if (!Helper.comparePassword(rows[0].password, req.body.password)) {\n        return res\n          .status(400)\n          .send({ 'message': 'The credentials you provided is incorrect' });\n      }\n      const token = Helper.generateToken(rows[0].id);\n      return res.status(200).send({ token });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async hprofile(req, res) {\n    const profileQuery = \"Select * FROM hospital WHERE id=$1\";\n    try {\n      const { rows } = await db.query(profileQuery, [req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'hospital not found' });\n      }\n      return res.status(200).json(rows[0]);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async order(req, res) {\n    const checkbankQuery = \"Select * from BloodBank where name=$1\"\n    const orderQuery =\n      \"Insert into orders(id,BloodType,Amount,hospital_id,bank_id,status) values($1,$2,$3,$4,$5,$6) returning *\";\n    try {\n      const rows0 = await db.query(checkbankQuery, [req.body.bank_name]);\n      if (!rows0.rows[0]) {\n          return res.status(404).send({ 'message': 'bank name not found' });\n      }\n      const values6 = [\n        uuidv4(),\n        req.body.bloodtype,\n        req.body.amount,\n        req.user.id,\n        rows0.rows[0].id,\n        'P'\n      ];\n      const { rows } = await db.query(orderQuery, values6);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'order not found' });\n      }\n      return res.status(200).send({ 'message': 'created order' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async hgetorder(req, res) {\n    const hgetorderQuery =\n      \"Select * from orders where hospital_id=$1\";\n    try {\n      const { rows } = await db.query(hgetorderQuery, [req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'no order' });\n      }\n      return res.status(200).json(rows);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async editorder(req, res) {\n    const orderQuery =\n      \"Update orders set BloodType=$1,Amount=$2,hospital_id=$3 where id=$4 returning *\";\n    const values6 = [\n      req.body.bloodtype,\n      req.body.amount,\n      req.user.id,\n      req.params.orderid\n    ]\n    try {\n      const { rows } = await db.query(orderQuery, values6);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'order not found' });\n      }\n      return res.status(200).send({ 'message': 'edited order' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async deleteorder(req, res) {\n    const ckorder = \"Select status from orders where id=$1 and hospital_id=$2\"\n    const deleteorderQuery =\n      \"Delete from orders where id=$1\";\n    const values7 = [\n      req.params.orderid,\n      req.user.id\n    ]\n    try {\n      const rows9 = await db.query(ckorder, values7)\n      if (!rows9.rows[0]) {\n        return res.status(404).send({ 'message': 'order not found' });\n      }\n      if (rows9.rows[0] == 'A') return res.status(400).send({'message':'order already accepted'})\n      await db.query(deleteorderQuery, [req.params.orderid]);\n      return res.status(200).send({ 'message': 'deleted order' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n};\n\nexport default Controllerdb;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560348737804
  },
  "{\"sourceRoot\":\"/home/duong/Documents/database_project/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/duong/Documents/database_project\",\"filename\":\"/home/duong/Documents/database_project/src/db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/duong/Documents/database_project\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/duong/Documents/database_project/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/duong/Documents/database_project",
      "filename": "/home/duong/Documents/database_project/src/db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/duong/Documents/database_project",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/duong/Documents/database_project/src/db.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/duong/Documents/database_project/src/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/duong/Documents/database_project/src",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _pg = require(\"pg\");\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\nvar pool = new _pg.Pool({\n  connectionString: process.env.DATABASE_URL\n});\nvar _default = {\n  /**\n   * DB Query\n   * @param {string} text\n   * @param {Array} params\n   * @returns {object} object \n   */\n  query: function query(text, params) {\n    return new Promise(function (resolve, reject) {\n      pool.query(text, params).then(function (res) {\n        resolve(res);\n      })[\"catch\"](function (err) {\n        reject(err);\n      });\n    });\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImRvdGVudiIsImNvbmZpZyIsInBvb2wiLCJQb29sIiwiY29ubmVjdGlvblN0cmluZyIsInByb2Nlc3MiLCJlbnYiLCJEQVRBQkFTRV9VUkwiLCJxdWVyeSIsInRleHQiLCJwYXJhbXMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInRoZW4iLCJyZXMiLCJlcnIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUVBQSxtQkFBT0MsTUFBUDs7QUFFQSxJQUFNQyxJQUFJLEdBQUcsSUFBSUMsUUFBSixDQUFTO0FBQ3BCQyxFQUFBQSxnQkFBZ0IsRUFBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDO0FBRFYsQ0FBVCxDQUFiO2VBSWU7QUFDYjs7Ozs7O0FBTUFDLEVBQUFBLEtBUGEsaUJBT1BDLElBUE8sRUFPREMsTUFQQyxFQU9NO0FBQ2pCLFdBQU8sSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUN0Q1gsTUFBQUEsSUFBSSxDQUFDTSxLQUFMLENBQVdDLElBQVgsRUFBaUJDLE1BQWpCLEVBQ0NJLElBREQsQ0FDTSxVQUFDQyxHQUFELEVBQVM7QUFDYkgsUUFBQUEsT0FBTyxDQUFDRyxHQUFELENBQVA7QUFDRCxPQUhELFdBSU8sVUFBQ0MsR0FBRCxFQUFTO0FBQ2RILFFBQUFBLE1BQU0sQ0FBQ0csR0FBRCxDQUFOO0FBQ0QsT0FORDtBQU9ELEtBUk0sQ0FBUDtBQVNEO0FBakJZLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZHVvbmcvRG9jdW1lbnRzL2RhdGFiYXNlX3Byb2plY3Qvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUG9vbCB9IGZyb20gJ3BnJztcbmltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52JztcblxuZG90ZW52LmNvbmZpZygpO1xuXG5jb25zdCBwb29sID0gbmV3IFBvb2woe1xuICBjb25uZWN0aW9uU3RyaW5nOiBwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIC8qKlxuICAgKiBEQiBRdWVyeVxuICAgKiBAcGFyYW0ge3N0cmluZ30gdGV4dFxuICAgKiBAcGFyYW0ge0FycmF5fSBwYXJhbXNcbiAgICogQHJldHVybnMge29iamVjdH0gb2JqZWN0IFxuICAgKi9cbiAgcXVlcnkodGV4dCwgcGFyYW1zKXtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgcG9vbC5xdWVyeSh0ZXh0LCBwYXJhbXMpXG4gICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgIHJlc29sdmUocmVzKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "dotenv",
        "config",
        "pool",
        "Pool",
        "connectionString",
        "process",
        "env",
        "DATABASE_URL",
        "query",
        "text",
        "params",
        "Promise",
        "resolve",
        "reject",
        "then",
        "res",
        "err"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEAA,mBAAOC,MAAP;;AAEA,IAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAS;AACpBC,EAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADV,CAAT,CAAb;eAIe;AACb;;;;;;AAMAC,EAAAA,KAPa,iBAOPC,IAPO,EAODC,MAPC,EAOM;AACjB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCX,MAAAA,IAAI,CAACM,KAAL,CAAWC,IAAX,EAAiBC,MAAjB,EACCI,IADD,CACM,UAACC,GAAD,EAAS;AACbH,QAAAA,OAAO,CAACG,GAAD,CAAP;AACD,OAHD,WAIO,UAACC,GAAD,EAAS;AACdH,QAAAA,MAAM,CAACG,GAAD,CAAN;AACD,OAND;AAOD,KARM,CAAP;AASD;AAjBY,C",
      "sourceRoot": "/home/duong/Documents/database_project/src",
      "sourcesContent": [
        "import { Pool } from 'pg';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst pool = new Pool({\n  connectionString: process.env.DATABASE_URL\n});\n\nexport default {\n  /**\n   * DB Query\n   * @param {string} text\n   * @param {Array} params\n   * @returns {object} object \n   */\n  query(text, params){\n    return new Promise((resolve, reject) => {\n      pool.query(text, params)\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((err) => {\n        reject(err);\n      })\n    })\n  }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558112197164
  },
  "{\"sourceRoot\":\"/home/duong/Documents/database_project/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/duong/Documents/database_project\",\"filename\":\"/home/duong/Documents/database_project/src/Helper.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/duong/Documents/database_project\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/duong/Documents/database_project/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/duong/Documents/database_project",
      "filename": "/home/duong/Documents/database_project/src/Helper.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/duong/Documents/database_project",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/duong/Documents/database_project/src/Helper.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/duong/Documents/database_project/src/Helper.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/duong/Documents/database_project/src",
        "sourceFileName": "Helper.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Helper = {\n  /**\n   * Hash Password Method\n   * @param {string} password\n   * @returns {string} returns hashed password\n   */\n  hashPassword: function hashPassword(password) {\n    return _bcrypt[\"default\"].hashSync(password, _bcrypt[\"default\"].genSaltSync(8));\n  },\n\n  /**\n   * comparePassword\n   * @param {string} hashPassword \n   * @param {string} password \n   * @returns {Boolean} return True or False\n   */\n  comparePassword: function comparePassword(hashPassword, password) {\n    return _bcrypt[\"default\"].compareSync(password, hashPassword);\n  },\n\n  /**\n   * isValidEmail helper method\n   * @param {string} email\n   * @returns {Boolean} True or False\n   */\n  isValidEmail: function isValidEmail(email) {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  },\n\n  /**\n   * Gnerate Token\n   * @param {string} id\n   * @returns {string} token\n   */\n  generateToken: function generateToken(id) {\n    var token = _jsonwebtoken[\"default\"].sign({\n      userId: id\n    }, process.env.SECRET, {\n      expiresIn: '7d'\n    });\n\n    return token;\n  }\n};\nvar _default = Helper;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkhlbHBlci5qcyJdLCJuYW1lcyI6WyJIZWxwZXIiLCJoYXNoUGFzc3dvcmQiLCJwYXNzd29yZCIsImJjcnlwdCIsImhhc2hTeW5jIiwiZ2VuU2FsdFN5bmMiLCJjb21wYXJlUGFzc3dvcmQiLCJjb21wYXJlU3luYyIsImlzVmFsaWRFbWFpbCIsImVtYWlsIiwidGVzdCIsImdlbmVyYXRlVG9rZW4iLCJpZCIsInRva2VuIiwiand0Iiwic2lnbiIsInVzZXJJZCIsInByb2Nlc3MiLCJlbnYiLCJTRUNSRVQiLCJleHBpcmVzSW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUVBLElBQU1BLE1BQU0sR0FBRztBQUNiOzs7OztBQUtBQyxFQUFBQSxZQU5hLHdCQU1BQyxRQU5BLEVBTVU7QUFDckIsV0FBT0MsbUJBQU9DLFFBQVAsQ0FBZ0JGLFFBQWhCLEVBQTBCQyxtQkFBT0UsV0FBUCxDQUFtQixDQUFuQixDQUExQixDQUFQO0FBQ0QsR0FSWTs7QUFTYjs7Ozs7O0FBTUFDLEVBQUFBLGVBZmEsMkJBZUdMLFlBZkgsRUFlaUJDLFFBZmpCLEVBZTJCO0FBQ3RDLFdBQU9DLG1CQUFPSSxXQUFQLENBQW1CTCxRQUFuQixFQUE2QkQsWUFBN0IsQ0FBUDtBQUNELEdBakJZOztBQWtCYjs7Ozs7QUFLQU8sRUFBQUEsWUF2QmEsd0JBdUJBQyxLQXZCQSxFQXVCTztBQUNsQixXQUFPLGVBQWVDLElBQWYsQ0FBb0JELEtBQXBCLENBQVA7QUFDRCxHQXpCWTs7QUEwQmI7Ozs7O0FBS0FFLEVBQUFBLGFBL0JhLHlCQStCQ0MsRUEvQkQsRUErQks7QUFDaEIsUUFBTUMsS0FBSyxHQUFHQyx5QkFBSUMsSUFBSixDQUFTO0FBQ3JCQyxNQUFBQSxNQUFNLEVBQUVKO0FBRGEsS0FBVCxFQUdaSyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsTUFIQSxFQUdRO0FBQUVDLE1BQUFBLFNBQVMsRUFBRTtBQUFiLEtBSFIsQ0FBZDs7QUFLQSxXQUFPUCxLQUFQO0FBQ0Q7QUF0Q1ksQ0FBZjtlQXlDZWIsTSIsInNvdXJjZVJvb3QiOiIvaG9tZS9kdW9uZy9Eb2N1bWVudHMvZGF0YWJhc2VfcHJvamVjdC9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdCc7XG5pbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbic7XG5cbmNvbnN0IEhlbHBlciA9IHtcbiAgLyoqXG4gICAqIEhhc2ggUGFzc3dvcmQgTWV0aG9kXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwYXNzd29yZFxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSByZXR1cm5zIGhhc2hlZCBwYXNzd29yZFxuICAgKi9cbiAgaGFzaFBhc3N3b3JkKHBhc3N3b3JkKSB7XG4gICAgcmV0dXJuIGJjcnlwdC5oYXNoU3luYyhwYXNzd29yZCwgYmNyeXB0LmdlblNhbHRTeW5jKDgpKVxuICB9LFxuICAvKipcbiAgICogY29tcGFyZVBhc3N3b3JkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBoYXNoUGFzc3dvcmQgXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwYXNzd29yZCBcbiAgICogQHJldHVybnMge0Jvb2xlYW59IHJldHVybiBUcnVlIG9yIEZhbHNlXG4gICAqL1xuICBjb21wYXJlUGFzc3dvcmQoaGFzaFBhc3N3b3JkLCBwYXNzd29yZCkge1xuICAgIHJldHVybiBiY3J5cHQuY29tcGFyZVN5bmMocGFzc3dvcmQsIGhhc2hQYXNzd29yZCk7XG4gIH0sXG4gIC8qKlxuICAgKiBpc1ZhbGlkRW1haWwgaGVscGVyIG1ldGhvZFxuICAgKiBAcGFyYW0ge3N0cmluZ30gZW1haWxcbiAgICogQHJldHVybnMge0Jvb2xlYW59IFRydWUgb3IgRmFsc2VcbiAgICovXG4gIGlzVmFsaWRFbWFpbChlbWFpbCkge1xuICAgIHJldHVybiAvXFxTK0BcXFMrXFwuXFxTKy8udGVzdChlbWFpbCk7XG4gIH0sXG4gIC8qKlxuICAgKiBHbmVyYXRlIFRva2VuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpZFxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSB0b2tlblxuICAgKi9cbiAgZ2VuZXJhdGVUb2tlbihpZCkge1xuICAgIGNvbnN0IHRva2VuID0gand0LnNpZ24oe1xuICAgICAgdXNlcklkOiBpZFxuICAgIH0sXG4gICAgICBwcm9jZXNzLmVudi5TRUNSRVQsIHsgZXhwaXJlc0luOiAnN2QnIH1cbiAgICApO1xuICAgIHJldHVybiB0b2tlbjtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBIZWxwZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Helper.js"
      ],
      "names": [
        "Helper",
        "hashPassword",
        "password",
        "bcrypt",
        "hashSync",
        "genSaltSync",
        "comparePassword",
        "compareSync",
        "isValidEmail",
        "email",
        "test",
        "generateToken",
        "id",
        "token",
        "jwt",
        "sign",
        "userId",
        "process",
        "env",
        "SECRET",
        "expiresIn"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG;AACb;;;;;AAKAC,EAAAA,YANa,wBAMAC,QANA,EAMU;AACrB,WAAOC,mBAAOC,QAAP,CAAgBF,QAAhB,EAA0BC,mBAAOE,WAAP,CAAmB,CAAnB,CAA1B,CAAP;AACD,GARY;;AASb;;;;;;AAMAC,EAAAA,eAfa,2BAeGL,YAfH,EAeiBC,QAfjB,EAe2B;AACtC,WAAOC,mBAAOI,WAAP,CAAmBL,QAAnB,EAA6BD,YAA7B,CAAP;AACD,GAjBY;;AAkBb;;;;;AAKAO,EAAAA,YAvBa,wBAuBAC,KAvBA,EAuBO;AAClB,WAAO,eAAeC,IAAf,CAAoBD,KAApB,CAAP;AACD,GAzBY;;AA0Bb;;;;;AAKAE,EAAAA,aA/Ba,yBA+BCC,EA/BD,EA+BK;AAChB,QAAMC,KAAK,GAAGC,yBAAIC,IAAJ,CAAS;AACrBC,MAAAA,MAAM,EAAEJ;AADa,KAAT,EAGZK,OAAO,CAACC,GAAR,CAAYC,MAHA,EAGQ;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAHR,CAAd;;AAKA,WAAOP,KAAP;AACD;AAtCY,CAAf;eAyCeb,M",
      "sourceRoot": "/home/duong/Documents/database_project/src",
      "sourcesContent": [
        "import bcrypt from 'bcrypt';\nimport jwt from 'jsonwebtoken';\n\nconst Helper = {\n  /**\n   * Hash Password Method\n   * @param {string} password\n   * @returns {string} returns hashed password\n   */\n  hashPassword(password) {\n    return bcrypt.hashSync(password, bcrypt.genSaltSync(8))\n  },\n  /**\n   * comparePassword\n   * @param {string} hashPassword \n   * @param {string} password \n   * @returns {Boolean} return True or False\n   */\n  comparePassword(hashPassword, password) {\n    return bcrypt.compareSync(password, hashPassword);\n  },\n  /**\n   * isValidEmail helper method\n   * @param {string} email\n   * @returns {Boolean} True or False\n   */\n  isValidEmail(email) {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  },\n  /**\n   * Gnerate Token\n   * @param {string} id\n   * @returns {string} token\n   */\n  generateToken(id) {\n    const token = jwt.sign({\n      userId: id\n    },\n      process.env.SECRET, { expiresIn: '7d' }\n    );\n    return token;\n  }\n}\n\nexport default Helper;"
      ]
    },
    "sourceType": "script",
    "mtime": 1558110606511
  },
  "{\"sourceRoot\":\"/home/duong/Documents/database_project/src/Auth\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/duong/Documents/database_project\",\"filename\":\"/home/duong/Documents/database_project/src/Auth/Authdonor.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/duong/Documents/database_project\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/duong/Documents/database_project/src/Auth",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/duong/Documents/database_project",
      "filename": "/home/duong/Documents/database_project/src/Auth/Authdonor.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/duong/Documents/database_project",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/duong/Documents/database_project/src/Auth/Authdonor.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/duong/Documents/database_project/src/Auth/Authdonor.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/duong/Documents/database_project/src/Auth",
        "sourceFileName": "Authdonor.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _db = _interopRequireDefault(require(\"../db\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Authdonor = {\n  /**\n   * Verify Token\n   * @param {object} req \n   * @param {object} res \n   * @param {object} next\n   * @returns {object|void} response object \n   */\n  verifyToken: function () {\n    var _verifyToken = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(req, res, next) {\n      var token, decoded, text, _ref, rows;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              token = req.headers['x-access-token'];\n\n              if (token) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.status(400).send({\n                'message': 'Token is not provided'\n              }));\n\n            case 3:\n              _context.prev = 3;\n              _context.next = 6;\n              return _jsonwebtoken[\"default\"].verify(token, process.env.SECRET);\n\n            case 6:\n              decoded = _context.sent;\n              text = 'SELECT * FROM donors WHERE id = $1';\n              _context.next = 10;\n              return _db[\"default\"].query(text, [decoded.userId]);\n\n            case 10:\n              _ref = _context.sent;\n              rows = _ref.rows;\n\n              if (rows[0]) {\n                _context.next = 14;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.status(400).send({\n                'message': 'The token you provided is invalid'\n              }));\n\n            case 14:\n              req.user = {\n                id: decoded.userId\n              };\n              next();\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](3);\n              return _context.abrupt(\"return\", res.status(400).send(_context.t0));\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 18]]);\n    }));\n\n    function verifyToken(_x, _x2, _x3) {\n      return _verifyToken.apply(this, arguments);\n    }\n\n    return verifyToken;\n  }()\n};\nvar _default = Authdonor;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkF1dGhkb25vci5qcyJdLCJuYW1lcyI6WyJBdXRoZG9ub3IiLCJ2ZXJpZnlUb2tlbiIsInJlcSIsInJlcyIsIm5leHQiLCJ0b2tlbiIsImhlYWRlcnMiLCJzdGF0dXMiLCJzZW5kIiwiand0IiwidmVyaWZ5IiwicHJvY2VzcyIsImVudiIsIlNFQ1JFVCIsImRlY29kZWQiLCJ0ZXh0IiwiZGIiLCJxdWVyeSIsInVzZXJJZCIsInJvd3MiLCJ1c2VyIiwiaWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7QUFFQSxJQUFNQSxTQUFTLEdBQUc7QUFDaEI7Ozs7Ozs7QUFPTUMsRUFBQUEsV0FSVTtBQUFBO0FBQUE7QUFBQSw2Q0FRRUMsR0FSRixFQVFPQyxHQVJQLEVBUVlDLElBUlo7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQVNSQyxjQUFBQSxLQVRRLEdBU0FILEdBQUcsQ0FBQ0ksT0FBSixDQUFZLGdCQUFaLENBVEE7O0FBQUEsa0JBVVZELEtBVlU7QUFBQTtBQUFBO0FBQUE7O0FBQUEsK0NBV0xGLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUUsMkJBQVc7QUFBYixlQUFyQixDQVhLOztBQUFBO0FBQUE7QUFBQTtBQUFBLHFCQWNVQyx5QkFBSUMsTUFBSixDQUFXTCxLQUFYLEVBQWtCTSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsTUFBOUIsQ0FkVjs7QUFBQTtBQWNOQyxjQUFBQSxPQWRNO0FBZU5DLGNBQUFBLElBZk0sR0FlQyxvQ0FmRDtBQUFBO0FBQUEscUJBZ0JXQyxlQUFHQyxLQUFILENBQVNGLElBQVQsRUFBZSxDQUFDRCxPQUFPLENBQUNJLE1BQVQsQ0FBZixDQWhCWDs7QUFBQTtBQUFBO0FBZ0JKQyxjQUFBQSxJQWhCSSxRQWdCSkEsSUFoQkk7O0FBQUEsa0JBaUJSQSxJQUFJLENBQUMsQ0FBRCxDQWpCSTtBQUFBO0FBQUE7QUFBQTs7QUFBQSwrQ0FrQkhoQixHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFLDJCQUFXO0FBQWIsZUFBckIsQ0FsQkc7O0FBQUE7QUFvQlpOLGNBQUFBLEdBQUcsQ0FBQ2tCLElBQUosR0FBVztBQUFFQyxnQkFBQUEsRUFBRSxFQUFFUCxPQUFPLENBQUNJO0FBQWQsZUFBWDtBQUNBZCxjQUFBQSxJQUFJO0FBckJRO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUEsK0NBdUJMRCxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixhQXZCSzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBLENBQWxCO2VBNEJlUixTIiwic291cmNlUm9vdCI6Ii9ob21lL2R1b25nL0RvY3VtZW50cy9kYXRhYmFzZV9wcm9qZWN0L3NyYy9BdXRoIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xuaW1wb3J0IGRiIGZyb20gJy4uL2RiJzsgXG5cbmNvbnN0IEF1dGhkb25vciA9IHtcbiAgLyoqXG4gICAqIFZlcmlmeSBUb2tlblxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVxIFxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVzIFxuICAgKiBAcGFyYW0ge29iamVjdH0gbmV4dFxuICAgKiBAcmV0dXJucyB7b2JqZWN0fHZvaWR9IHJlc3BvbnNlIG9iamVjdCBcbiAgICovXG4gIGFzeW5jIHZlcmlmeVRva2VuKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgY29uc3QgdG9rZW4gPSByZXEuaGVhZGVyc1sneC1hY2Nlc3MtdG9rZW4nXTtcbiAgICBpZighdG9rZW4pIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuc2VuZCh7ICdtZXNzYWdlJzogJ1Rva2VuIGlzIG5vdCBwcm92aWRlZCcgfSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICBjb25zdCBkZWNvZGVkID0gYXdhaXQgand0LnZlcmlmeSh0b2tlbiwgcHJvY2Vzcy5lbnYuU0VDUkVUKTtcbiAgICAgIGNvbnN0IHRleHQgPSAnU0VMRUNUICogRlJPTSBkb25vcnMgV0hFUkUgaWQgPSAkMSc7XG4gICAgICBjb25zdCB7IHJvd3MgfSA9IGF3YWl0IGRiLnF1ZXJ5KHRleHQsIFtkZWNvZGVkLnVzZXJJZF0pO1xuICAgICAgaWYoIXJvd3NbMF0pIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHsgJ21lc3NhZ2UnOiAnVGhlIHRva2VuIHlvdSBwcm92aWRlZCBpcyBpbnZhbGlkJyB9KTtcbiAgICAgIH1cbiAgICAgIHJlcS51c2VyID0geyBpZDogZGVjb2RlZC51c2VySWQgfTtcbiAgICAgIG5leHQoKTtcbiAgICB9IGNhdGNoKGVycm9yKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLnNlbmQoZXJyb3IpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBBdXRoZG9ub3I7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Authdonor.js"
      ],
      "names": [
        "Authdonor",
        "verifyToken",
        "req",
        "res",
        "next",
        "token",
        "headers",
        "status",
        "send",
        "jwt",
        "verify",
        "process",
        "env",
        "SECRET",
        "decoded",
        "text",
        "db",
        "query",
        "userId",
        "rows",
        "user",
        "id"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,SAAS,GAAG;AAChB;;;;;;;AAOMC,EAAAA,WARU;AAAA;AAAA;AAAA,6CAQEC,GARF,EAQOC,GARP,EAQYC,IARZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AASRC,cAAAA,KATQ,GASAH,GAAG,CAACI,OAAJ,CAAY,gBAAZ,CATA;;AAAA,kBAUVD,KAVU;AAAA;AAAA;AAAA;;AAAA,+CAWLF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAXK;;AAAA;AAAA;AAAA;AAAA,qBAcUC,yBAAIC,MAAJ,CAAWL,KAAX,EAAkBM,OAAO,CAACC,GAAR,CAAYC,MAA9B,CAdV;;AAAA;AAcNC,cAAAA,OAdM;AAeNC,cAAAA,IAfM,GAeC,oCAfD;AAAA;AAAA,qBAgBWC,eAAGC,KAAH,CAASF,IAAT,EAAe,CAACD,OAAO,CAACI,MAAT,CAAf,CAhBX;;AAAA;AAAA;AAgBJC,cAAAA,IAhBI,QAgBJA,IAhBI;;AAAA,kBAiBRA,IAAI,CAAC,CAAD,CAjBI;AAAA;AAAA;AAAA;;AAAA,+CAkBHhB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAlBG;;AAAA;AAoBZN,cAAAA,GAAG,CAACkB,IAAJ,GAAW;AAAEC,gBAAAA,EAAE,EAAEP,OAAO,CAACI;AAAd,eAAX;AACAd,cAAAA,IAAI;AArBQ;AAAA;;AAAA;AAAA;AAAA;AAAA,+CAuBLD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,aAvBK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAlB;eA4BeR,S",
      "sourceRoot": "/home/duong/Documents/database_project/src/Auth",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport db from '../db'; \n\nconst Authdonor = {\n  /**\n   * Verify Token\n   * @param {object} req \n   * @param {object} res \n   * @param {object} next\n   * @returns {object|void} response object \n   */\n  async verifyToken(req, res, next) {\n    const token = req.headers['x-access-token'];\n    if(!token) {\n      return res.status(400).send({ 'message': 'Token is not provided' });\n    }\n    try {\n      const decoded = await jwt.verify(token, process.env.SECRET);\n      const text = 'SELECT * FROM donors WHERE id = $1';\n      const { rows } = await db.query(text, [decoded.userId]);\n      if(!rows[0]) {\n        return res.status(400).send({ 'message': 'The token you provided is invalid' });\n      }\n      req.user = { id: decoded.userId };\n      next();\n    } catch(error) {\n      return res.status(400).send(error);\n    }\n  }\n}\n\nexport default Authdonor;"
      ]
    },
    "sourceType": "script",
    "mtime": 1558361776773
  },
  "{\"sourceRoot\":\"/home/duong/Documents/database_project/src/Auth\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/duong/Documents/database_project\",\"filename\":\"/home/duong/Documents/database_project/src/Auth/Authhospital.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/duong/Documents/database_project\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/duong/Documents/database_project/src/Auth",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/duong/Documents/database_project",
      "filename": "/home/duong/Documents/database_project/src/Auth/Authhospital.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/duong/Documents/database_project",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/duong/Documents/database_project/src/Auth/Authhospital.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/duong/Documents/database_project/src/Auth/Authhospital.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/duong/Documents/database_project/src/Auth",
        "sourceFileName": "Authhospital.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _db = _interopRequireDefault(require(\"../db\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Authhospital = {\n  /**\n   * Verify Token\n   * @param {object} req \n   * @param {object} res \n   * @param {object} next\n   * @returns {object|void} response object \n   */\n  verifyToken: function () {\n    var _verifyToken = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(req, res, next) {\n      var token, decoded, text, _ref, rows;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              token = req.headers['x-access-token'];\n\n              if (token) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.status(400).send({\n                'message': 'Token is not provided'\n              }));\n\n            case 3:\n              _context.prev = 3;\n              _context.next = 6;\n              return _jsonwebtoken[\"default\"].verify(token, process.env.SECRET);\n\n            case 6:\n              decoded = _context.sent;\n              text = 'SELECT * FROM hospital WHERE id = $1';\n              _context.next = 10;\n              return _db[\"default\"].query(text, [decoded.userId]);\n\n            case 10:\n              _ref = _context.sent;\n              rows = _ref.rows;\n\n              if (rows[0]) {\n                _context.next = 14;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.status(400).send({\n                'message': 'The token you provided is invalid'\n              }));\n\n            case 14:\n              req.user = {\n                id: decoded.userId\n              };\n              next();\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](3);\n              return _context.abrupt(\"return\", res.status(400).send(_context.t0));\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 18]]);\n    }));\n\n    function verifyToken(_x, _x2, _x3) {\n      return _verifyToken.apply(this, arguments);\n    }\n\n    return verifyToken;\n  }()\n};\nvar _default = Authhospital;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkF1dGhob3NwaXRhbC5qcyJdLCJuYW1lcyI6WyJBdXRoaG9zcGl0YWwiLCJ2ZXJpZnlUb2tlbiIsInJlcSIsInJlcyIsIm5leHQiLCJ0b2tlbiIsImhlYWRlcnMiLCJzdGF0dXMiLCJzZW5kIiwiand0IiwidmVyaWZ5IiwicHJvY2VzcyIsImVudiIsIlNFQ1JFVCIsImRlY29kZWQiLCJ0ZXh0IiwiZGIiLCJxdWVyeSIsInVzZXJJZCIsInJvd3MiLCJ1c2VyIiwiaWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7QUFFQSxJQUFNQSxZQUFZLEdBQUc7QUFDbkI7Ozs7Ozs7QUFPTUMsRUFBQUEsV0FSYTtBQUFBO0FBQUE7QUFBQSw2Q0FRREMsR0FSQyxFQVFJQyxHQVJKLEVBUVNDLElBUlQ7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQVNYQyxjQUFBQSxLQVRXLEdBU0hILEdBQUcsQ0FBQ0ksT0FBSixDQUFZLGdCQUFaLENBVEc7O0FBQUEsa0JBVWJELEtBVmE7QUFBQTtBQUFBO0FBQUE7O0FBQUEsK0NBV1JGLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUUsMkJBQVc7QUFBYixlQUFyQixDQVhROztBQUFBO0FBQUE7QUFBQTtBQUFBLHFCQWNPQyx5QkFBSUMsTUFBSixDQUFXTCxLQUFYLEVBQWtCTSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsTUFBOUIsQ0FkUDs7QUFBQTtBQWNUQyxjQUFBQSxPQWRTO0FBZVRDLGNBQUFBLElBZlMsR0FlRixzQ0FmRTtBQUFBO0FBQUEscUJBZ0JRQyxlQUFHQyxLQUFILENBQVNGLElBQVQsRUFBZSxDQUFDRCxPQUFPLENBQUNJLE1BQVQsQ0FBZixDQWhCUjs7QUFBQTtBQUFBO0FBZ0JQQyxjQUFBQSxJQWhCTyxRQWdCUEEsSUFoQk87O0FBQUEsa0JBaUJYQSxJQUFJLENBQUMsQ0FBRCxDQWpCTztBQUFBO0FBQUE7QUFBQTs7QUFBQSwrQ0FrQk5oQixHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFLDJCQUFXO0FBQWIsZUFBckIsQ0FsQk07O0FBQUE7QUFvQmZOLGNBQUFBLEdBQUcsQ0FBQ2tCLElBQUosR0FBVztBQUFFQyxnQkFBQUEsRUFBRSxFQUFFUCxPQUFPLENBQUNJO0FBQWQsZUFBWDtBQUNBZCxjQUFBQSxJQUFJO0FBckJXO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUEsK0NBdUJSRCxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixhQXZCUTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBLENBQXJCO2VBNEJlUixZIiwic291cmNlUm9vdCI6Ii9ob21lL2R1b25nL0RvY3VtZW50cy9kYXRhYmFzZV9wcm9qZWN0L3NyYy9BdXRoIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xuaW1wb3J0IGRiIGZyb20gJy4uL2RiJzsgXG5cbmNvbnN0IEF1dGhob3NwaXRhbCA9IHtcbiAgLyoqXG4gICAqIFZlcmlmeSBUb2tlblxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVxIFxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVzIFxuICAgKiBAcGFyYW0ge29iamVjdH0gbmV4dFxuICAgKiBAcmV0dXJucyB7b2JqZWN0fHZvaWR9IHJlc3BvbnNlIG9iamVjdCBcbiAgICovXG4gIGFzeW5jIHZlcmlmeVRva2VuKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgY29uc3QgdG9rZW4gPSByZXEuaGVhZGVyc1sneC1hY2Nlc3MtdG9rZW4nXTtcbiAgICBpZighdG9rZW4pIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuc2VuZCh7ICdtZXNzYWdlJzogJ1Rva2VuIGlzIG5vdCBwcm92aWRlZCcgfSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICBjb25zdCBkZWNvZGVkID0gYXdhaXQgand0LnZlcmlmeSh0b2tlbiwgcHJvY2Vzcy5lbnYuU0VDUkVUKTtcbiAgICAgIGNvbnN0IHRleHQgPSAnU0VMRUNUICogRlJPTSBob3NwaXRhbCBXSEVSRSBpZCA9ICQxJztcbiAgICAgIGNvbnN0IHsgcm93cyB9ID0gYXdhaXQgZGIucXVlcnkodGV4dCwgW2RlY29kZWQudXNlcklkXSk7XG4gICAgICBpZighcm93c1swXSkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLnNlbmQoeyAnbWVzc2FnZSc6ICdUaGUgdG9rZW4geW91IHByb3ZpZGVkIGlzIGludmFsaWQnIH0pO1xuICAgICAgfVxuICAgICAgcmVxLnVzZXIgPSB7IGlkOiBkZWNvZGVkLnVzZXJJZCB9O1xuICAgICAgbmV4dCgpO1xuICAgIH0gY2F0Y2goZXJyb3IpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuc2VuZChlcnJvcik7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEF1dGhob3NwaXRhbDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Authhospital.js"
      ],
      "names": [
        "Authhospital",
        "verifyToken",
        "req",
        "res",
        "next",
        "token",
        "headers",
        "status",
        "send",
        "jwt",
        "verify",
        "process",
        "env",
        "SECRET",
        "decoded",
        "text",
        "db",
        "query",
        "userId",
        "rows",
        "user",
        "id"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,YAAY,GAAG;AACnB;;;;;;;AAOMC,EAAAA,WARa;AAAA;AAAA;AAAA,6CAQDC,GARC,EAQIC,GARJ,EAQSC,IART;AAAA;;AAAA;AAAA;AAAA;AAAA;AASXC,cAAAA,KATW,GASHH,GAAG,CAACI,OAAJ,CAAY,gBAAZ,CATG;;AAAA,kBAUbD,KAVa;AAAA;AAAA;AAAA;;AAAA,+CAWRF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAXQ;;AAAA;AAAA;AAAA;AAAA,qBAcOC,yBAAIC,MAAJ,CAAWL,KAAX,EAAkBM,OAAO,CAACC,GAAR,CAAYC,MAA9B,CAdP;;AAAA;AAcTC,cAAAA,OAdS;AAeTC,cAAAA,IAfS,GAeF,sCAfE;AAAA;AAAA,qBAgBQC,eAAGC,KAAH,CAASF,IAAT,EAAe,CAACD,OAAO,CAACI,MAAT,CAAf,CAhBR;;AAAA;AAAA;AAgBPC,cAAAA,IAhBO,QAgBPA,IAhBO;;AAAA,kBAiBXA,IAAI,CAAC,CAAD,CAjBO;AAAA;AAAA;AAAA;;AAAA,+CAkBNhB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAlBM;;AAAA;AAoBfN,cAAAA,GAAG,CAACkB,IAAJ,GAAW;AAAEC,gBAAAA,EAAE,EAAEP,OAAO,CAACI;AAAd,eAAX;AACAd,cAAAA,IAAI;AArBW;AAAA;;AAAA;AAAA;AAAA;AAAA,+CAuBRD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,aAvBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAArB;eA4BeR,Y",
      "sourceRoot": "/home/duong/Documents/database_project/src/Auth",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport db from '../db'; \n\nconst Authhospital = {\n  /**\n   * Verify Token\n   * @param {object} req \n   * @param {object} res \n   * @param {object} next\n   * @returns {object|void} response object \n   */\n  async verifyToken(req, res, next) {\n    const token = req.headers['x-access-token'];\n    if(!token) {\n      return res.status(400).send({ 'message': 'Token is not provided' });\n    }\n    try {\n      const decoded = await jwt.verify(token, process.env.SECRET);\n      const text = 'SELECT * FROM hospital WHERE id = $1';\n      const { rows } = await db.query(text, [decoded.userId]);\n      if(!rows[0]) {\n        return res.status(400).send({ 'message': 'The token you provided is invalid' });\n      }\n      req.user = { id: decoded.userId };\n      next();\n    } catch(error) {\n      return res.status(400).send(error);\n    }\n  }\n}\n\nexport default Authhospital;"
      ]
    },
    "sourceType": "script",
    "mtime": 1558362089165
  },
  "{\"sourceRoot\":\"/home/duong/Documents/database_project/src/Auth\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/duong/Documents/database_project\",\"filename\":\"/home/duong/Documents/database_project/src/Auth/Authbanks.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/duong/Documents/database_project\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/duong/Documents/database_project/src/Auth",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/duong/Documents/database_project",
      "filename": "/home/duong/Documents/database_project/src/Auth/Authbanks.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/duong/Documents/database_project",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/duong/Documents/database_project/src/Auth/Authbanks.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/duong/Documents/database_project/src/Auth/Authbanks.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/duong/Documents/database_project/src/Auth",
        "sourceFileName": "Authbanks.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _db = _interopRequireDefault(require(\"../db\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Authbanks = {\n  /**\n   * Verify Token\n   * @param {object} req \n   * @param {object} res \n   * @param {object} next\n   * @returns {object|void} response object \n   */\n  verifyToken: function () {\n    var _verifyToken = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(req, res, next) {\n      var token, decoded, text, _ref, rows;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              token = req.headers['x-access-token'];\n\n              if (token) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.status(400).send({\n                'message': 'Token is not provided'\n              }));\n\n            case 3:\n              _context.prev = 3;\n              _context.next = 6;\n              return _jsonwebtoken[\"default\"].verify(token, process.env.SECRET);\n\n            case 6:\n              decoded = _context.sent;\n              text = 'SELECT * FROM BloodBank WHERE id = $1';\n              _context.next = 10;\n              return _db[\"default\"].query(text, [decoded.userId]);\n\n            case 10:\n              _ref = _context.sent;\n              rows = _ref.rows;\n\n              if (rows[0]) {\n                _context.next = 14;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.status(400).send({\n                'message': 'The token you provided is invalid'\n              }));\n\n            case 14:\n              req.user = {\n                id: decoded.userId\n              };\n              next();\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](3);\n              return _context.abrupt(\"return\", res.status(400).send(_context.t0));\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 18]]);\n    }));\n\n    function verifyToken(_x, _x2, _x3) {\n      return _verifyToken.apply(this, arguments);\n    }\n\n    return verifyToken;\n  }()\n};\nvar _default = Authbanks;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkF1dGhiYW5rcy5qcyJdLCJuYW1lcyI6WyJBdXRoYmFua3MiLCJ2ZXJpZnlUb2tlbiIsInJlcSIsInJlcyIsIm5leHQiLCJ0b2tlbiIsImhlYWRlcnMiLCJzdGF0dXMiLCJzZW5kIiwiand0IiwidmVyaWZ5IiwicHJvY2VzcyIsImVudiIsIlNFQ1JFVCIsImRlY29kZWQiLCJ0ZXh0IiwiZGIiLCJxdWVyeSIsInVzZXJJZCIsInJvd3MiLCJ1c2VyIiwiaWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7QUFFQSxJQUFNQSxTQUFTLEdBQUc7QUFDaEI7Ozs7Ozs7QUFPTUMsRUFBQUEsV0FSVTtBQUFBO0FBQUE7QUFBQSw2Q0FRRUMsR0FSRixFQVFPQyxHQVJQLEVBUVlDLElBUlo7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQVNSQyxjQUFBQSxLQVRRLEdBU0FILEdBQUcsQ0FBQ0ksT0FBSixDQUFZLGdCQUFaLENBVEE7O0FBQUEsa0JBVVZELEtBVlU7QUFBQTtBQUFBO0FBQUE7O0FBQUEsK0NBV0xGLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUUsMkJBQVc7QUFBYixlQUFyQixDQVhLOztBQUFBO0FBQUE7QUFBQTtBQUFBLHFCQWNVQyx5QkFBSUMsTUFBSixDQUFXTCxLQUFYLEVBQWtCTSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsTUFBOUIsQ0FkVjs7QUFBQTtBQWNOQyxjQUFBQSxPQWRNO0FBZU5DLGNBQUFBLElBZk0sR0FlQyx1Q0FmRDtBQUFBO0FBQUEscUJBZ0JXQyxlQUFHQyxLQUFILENBQVNGLElBQVQsRUFBZSxDQUFDRCxPQUFPLENBQUNJLE1BQVQsQ0FBZixDQWhCWDs7QUFBQTtBQUFBO0FBZ0JKQyxjQUFBQSxJQWhCSSxRQWdCSkEsSUFoQkk7O0FBQUEsa0JBaUJSQSxJQUFJLENBQUMsQ0FBRCxDQWpCSTtBQUFBO0FBQUE7QUFBQTs7QUFBQSwrQ0FrQkhoQixHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFLDJCQUFXO0FBQWIsZUFBckIsQ0FsQkc7O0FBQUE7QUFvQlpOLGNBQUFBLEdBQUcsQ0FBQ2tCLElBQUosR0FBVztBQUFFQyxnQkFBQUEsRUFBRSxFQUFFUCxPQUFPLENBQUNJO0FBQWQsZUFBWDtBQUNBZCxjQUFBQSxJQUFJO0FBckJRO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUEsK0NBdUJMRCxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixhQXZCSzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBLENBQWxCO2VBNEJlUixTIiwic291cmNlUm9vdCI6Ii9ob21lL2R1b25nL0RvY3VtZW50cy9kYXRhYmFzZV9wcm9qZWN0L3NyYy9BdXRoIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xuaW1wb3J0IGRiIGZyb20gJy4uL2RiJzsgXG5cbmNvbnN0IEF1dGhiYW5rcyA9IHtcbiAgLyoqXG4gICAqIFZlcmlmeSBUb2tlblxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVxIFxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVzIFxuICAgKiBAcGFyYW0ge29iamVjdH0gbmV4dFxuICAgKiBAcmV0dXJucyB7b2JqZWN0fHZvaWR9IHJlc3BvbnNlIG9iamVjdCBcbiAgICovXG4gIGFzeW5jIHZlcmlmeVRva2VuKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgY29uc3QgdG9rZW4gPSByZXEuaGVhZGVyc1sneC1hY2Nlc3MtdG9rZW4nXTtcbiAgICBpZighdG9rZW4pIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuc2VuZCh7ICdtZXNzYWdlJzogJ1Rva2VuIGlzIG5vdCBwcm92aWRlZCcgfSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICBjb25zdCBkZWNvZGVkID0gYXdhaXQgand0LnZlcmlmeSh0b2tlbiwgcHJvY2Vzcy5lbnYuU0VDUkVUKTtcbiAgICAgIGNvbnN0IHRleHQgPSAnU0VMRUNUICogRlJPTSBCbG9vZEJhbmsgV0hFUkUgaWQgPSAkMSc7XG4gICAgICBjb25zdCB7IHJvd3MgfSA9IGF3YWl0IGRiLnF1ZXJ5KHRleHQsIFtkZWNvZGVkLnVzZXJJZF0pO1xuICAgICAgaWYoIXJvd3NbMF0pIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHsgJ21lc3NhZ2UnOiAnVGhlIHRva2VuIHlvdSBwcm92aWRlZCBpcyBpbnZhbGlkJyB9KTtcbiAgICAgIH1cbiAgICAgIHJlcS51c2VyID0geyBpZDogZGVjb2RlZC51c2VySWQgfTtcbiAgICAgIG5leHQoKTtcbiAgICB9IGNhdGNoKGVycm9yKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLnNlbmQoZXJyb3IpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBBdXRoYmFua3M7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Authbanks.js"
      ],
      "names": [
        "Authbanks",
        "verifyToken",
        "req",
        "res",
        "next",
        "token",
        "headers",
        "status",
        "send",
        "jwt",
        "verify",
        "process",
        "env",
        "SECRET",
        "decoded",
        "text",
        "db",
        "query",
        "userId",
        "rows",
        "user",
        "id"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,SAAS,GAAG;AAChB;;;;;;;AAOMC,EAAAA,WARU;AAAA;AAAA;AAAA,6CAQEC,GARF,EAQOC,GARP,EAQYC,IARZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AASRC,cAAAA,KATQ,GASAH,GAAG,CAACI,OAAJ,CAAY,gBAAZ,CATA;;AAAA,kBAUVD,KAVU;AAAA;AAAA;AAAA;;AAAA,+CAWLF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAXK;;AAAA;AAAA;AAAA;AAAA,qBAcUC,yBAAIC,MAAJ,CAAWL,KAAX,EAAkBM,OAAO,CAACC,GAAR,CAAYC,MAA9B,CAdV;;AAAA;AAcNC,cAAAA,OAdM;AAeNC,cAAAA,IAfM,GAeC,uCAfD;AAAA;AAAA,qBAgBWC,eAAGC,KAAH,CAASF,IAAT,EAAe,CAACD,OAAO,CAACI,MAAT,CAAf,CAhBX;;AAAA;AAAA;AAgBJC,cAAAA,IAhBI,QAgBJA,IAhBI;;AAAA,kBAiBRA,IAAI,CAAC,CAAD,CAjBI;AAAA;AAAA;AAAA;;AAAA,+CAkBHhB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAlBG;;AAAA;AAoBZN,cAAAA,GAAG,CAACkB,IAAJ,GAAW;AAAEC,gBAAAA,EAAE,EAAEP,OAAO,CAACI;AAAd,eAAX;AACAd,cAAAA,IAAI;AArBQ;AAAA;;AAAA;AAAA;AAAA;AAAA,+CAuBLD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,aAvBK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAlB;eA4BeR,S",
      "sourceRoot": "/home/duong/Documents/database_project/src/Auth",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport db from '../db'; \n\nconst Authbanks = {\n  /**\n   * Verify Token\n   * @param {object} req \n   * @param {object} res \n   * @param {object} next\n   * @returns {object|void} response object \n   */\n  async verifyToken(req, res, next) {\n    const token = req.headers['x-access-token'];\n    if(!token) {\n      return res.status(400).send({ 'message': 'Token is not provided' });\n    }\n    try {\n      const decoded = await jwt.verify(token, process.env.SECRET);\n      const text = 'SELECT * FROM BloodBank WHERE id = $1';\n      const { rows } = await db.query(text, [decoded.userId]);\n      if(!rows[0]) {\n        return res.status(400).send({ 'message': 'The token you provided is invalid' });\n      }\n      req.user = { id: decoded.userId };\n      next();\n    } catch(error) {\n      return res.status(400).send(error);\n    }\n  }\n}\n\nexport default Authbanks;"
      ]
    },
    "sourceType": "script",
    "mtime": 1558361834302
  },
  "{\"sourceRoot\":\"/home/duong/Documents/database_project/src/Auth\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/duong/Documents/database_project\",\"filename\":\"/home/duong/Documents/database_project/src/Auth/Authadmin.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/duong/Documents/database_project\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/duong/Documents/database_project/src/Auth",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/duong/Documents/database_project",
      "filename": "/home/duong/Documents/database_project/src/Auth/Authadmin.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/duong/Documents/database_project",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/duong/Documents/database_project/src/Auth/Authadmin.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/duong/Documents/database_project/src/Auth/Authadmin.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/duong/Documents/database_project/src/Auth",
        "sourceFileName": "Authadmin.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _db = _interopRequireDefault(require(\"../db\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Authadmin = {\n  /**\n   * Verify Token\n   * @param {object} req \n   * @param {object} res \n   * @param {object} next\n   * @returns {object|void} response object \n   */\n  verifyToken: function () {\n    var _verifyToken = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(req, res, next) {\n      var token, decoded, text, _ref, rows;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              token = req.headers['x-access-token'];\n\n              if (token) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.status(400).send({\n                'message': 'Token is not provided'\n              }));\n\n            case 3:\n              _context.prev = 3;\n              _context.next = 6;\n              return _jsonwebtoken[\"default\"].verify(token, process.env.SECRET);\n\n            case 6:\n              decoded = _context.sent;\n              text = 'SELECT * FROM admin WHERE id = $1';\n              _context.next = 10;\n              return _db[\"default\"].query(text, [decoded.userId]);\n\n            case 10:\n              _ref = _context.sent;\n              rows = _ref.rows;\n\n              if (rows[0]) {\n                _context.next = 14;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.status(400).send({\n                'message': 'The token you provided is invalid'\n              }));\n\n            case 14:\n              req.user = {\n                id: decoded.userId\n              };\n              next();\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](3);\n              return _context.abrupt(\"return\", res.status(400).send(_context.t0));\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 18]]);\n    }));\n\n    function verifyToken(_x, _x2, _x3) {\n      return _verifyToken.apply(this, arguments);\n    }\n\n    return verifyToken;\n  }()\n};\nvar _default = Authadmin;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkF1dGhhZG1pbi5qcyJdLCJuYW1lcyI6WyJBdXRoYWRtaW4iLCJ2ZXJpZnlUb2tlbiIsInJlcSIsInJlcyIsIm5leHQiLCJ0b2tlbiIsImhlYWRlcnMiLCJzdGF0dXMiLCJzZW5kIiwiand0IiwidmVyaWZ5IiwicHJvY2VzcyIsImVudiIsIlNFQ1JFVCIsImRlY29kZWQiLCJ0ZXh0IiwiZGIiLCJxdWVyeSIsInVzZXJJZCIsInJvd3MiLCJ1c2VyIiwiaWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7QUFFQSxJQUFNQSxTQUFTLEdBQUc7QUFDaEI7Ozs7Ozs7QUFPTUMsRUFBQUEsV0FSVTtBQUFBO0FBQUE7QUFBQSw2Q0FRRUMsR0FSRixFQVFPQyxHQVJQLEVBUVlDLElBUlo7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQVNSQyxjQUFBQSxLQVRRLEdBU0FILEdBQUcsQ0FBQ0ksT0FBSixDQUFZLGdCQUFaLENBVEE7O0FBQUEsa0JBVVZELEtBVlU7QUFBQTtBQUFBO0FBQUE7O0FBQUEsK0NBV0xGLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUUsMkJBQVc7QUFBYixlQUFyQixDQVhLOztBQUFBO0FBQUE7QUFBQTtBQUFBLHFCQWNVQyx5QkFBSUMsTUFBSixDQUFXTCxLQUFYLEVBQWtCTSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsTUFBOUIsQ0FkVjs7QUFBQTtBQWNOQyxjQUFBQSxPQWRNO0FBZU5DLGNBQUFBLElBZk0sR0FlQyxtQ0FmRDtBQUFBO0FBQUEscUJBZ0JXQyxlQUFHQyxLQUFILENBQVNGLElBQVQsRUFBZSxDQUFDRCxPQUFPLENBQUNJLE1BQVQsQ0FBZixDQWhCWDs7QUFBQTtBQUFBO0FBZ0JKQyxjQUFBQSxJQWhCSSxRQWdCSkEsSUFoQkk7O0FBQUEsa0JBaUJSQSxJQUFJLENBQUMsQ0FBRCxDQWpCSTtBQUFBO0FBQUE7QUFBQTs7QUFBQSwrQ0FrQkhoQixHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFLDJCQUFXO0FBQWIsZUFBckIsQ0FsQkc7O0FBQUE7QUFvQlpOLGNBQUFBLEdBQUcsQ0FBQ2tCLElBQUosR0FBVztBQUFFQyxnQkFBQUEsRUFBRSxFQUFFUCxPQUFPLENBQUNJO0FBQWQsZUFBWDtBQUNBZCxjQUFBQSxJQUFJO0FBckJRO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUEsK0NBdUJMRCxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixhQXZCSzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBLENBQWxCO2VBNEJlUixTIiwic291cmNlUm9vdCI6Ii9ob21lL2R1b25nL0RvY3VtZW50cy9kYXRhYmFzZV9wcm9qZWN0L3NyYy9BdXRoIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xuaW1wb3J0IGRiIGZyb20gJy4uL2RiJzsgXG5cbmNvbnN0IEF1dGhhZG1pbiA9IHtcbiAgLyoqXG4gICAqIFZlcmlmeSBUb2tlblxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVxIFxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVzIFxuICAgKiBAcGFyYW0ge29iamVjdH0gbmV4dFxuICAgKiBAcmV0dXJucyB7b2JqZWN0fHZvaWR9IHJlc3BvbnNlIG9iamVjdCBcbiAgICovXG4gIGFzeW5jIHZlcmlmeVRva2VuKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgY29uc3QgdG9rZW4gPSByZXEuaGVhZGVyc1sneC1hY2Nlc3MtdG9rZW4nXTtcbiAgICBpZighdG9rZW4pIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuc2VuZCh7ICdtZXNzYWdlJzogJ1Rva2VuIGlzIG5vdCBwcm92aWRlZCcgfSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICBjb25zdCBkZWNvZGVkID0gYXdhaXQgand0LnZlcmlmeSh0b2tlbiwgcHJvY2Vzcy5lbnYuU0VDUkVUKTtcbiAgICAgIGNvbnN0IHRleHQgPSAnU0VMRUNUICogRlJPTSBhZG1pbiBXSEVSRSBpZCA9ICQxJztcbiAgICAgIGNvbnN0IHsgcm93cyB9ID0gYXdhaXQgZGIucXVlcnkodGV4dCwgW2RlY29kZWQudXNlcklkXSk7XG4gICAgICBpZighcm93c1swXSkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLnNlbmQoeyAnbWVzc2FnZSc6ICdUaGUgdG9rZW4geW91IHByb3ZpZGVkIGlzIGludmFsaWQnIH0pO1xuICAgICAgfVxuICAgICAgcmVxLnVzZXIgPSB7IGlkOiBkZWNvZGVkLnVzZXJJZCB9O1xuICAgICAgbmV4dCgpO1xuICAgIH0gY2F0Y2goZXJyb3IpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuc2VuZChlcnJvcik7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEF1dGhhZG1pbjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Authadmin.js"
      ],
      "names": [
        "Authadmin",
        "verifyToken",
        "req",
        "res",
        "next",
        "token",
        "headers",
        "status",
        "send",
        "jwt",
        "verify",
        "process",
        "env",
        "SECRET",
        "decoded",
        "text",
        "db",
        "query",
        "userId",
        "rows",
        "user",
        "id"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,SAAS,GAAG;AAChB;;;;;;;AAOMC,EAAAA,WARU;AAAA;AAAA;AAAA,6CAQEC,GARF,EAQOC,GARP,EAQYC,IARZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AASRC,cAAAA,KATQ,GASAH,GAAG,CAACI,OAAJ,CAAY,gBAAZ,CATA;;AAAA,kBAUVD,KAVU;AAAA;AAAA;AAAA;;AAAA,+CAWLF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAXK;;AAAA;AAAA;AAAA;AAAA,qBAcUC,yBAAIC,MAAJ,CAAWL,KAAX,EAAkBM,OAAO,CAACC,GAAR,CAAYC,MAA9B,CAdV;;AAAA;AAcNC,cAAAA,OAdM;AAeNC,cAAAA,IAfM,GAeC,mCAfD;AAAA;AAAA,qBAgBWC,eAAGC,KAAH,CAASF,IAAT,EAAe,CAACD,OAAO,CAACI,MAAT,CAAf,CAhBX;;AAAA;AAAA;AAgBJC,cAAAA,IAhBI,QAgBJA,IAhBI;;AAAA,kBAiBRA,IAAI,CAAC,CAAD,CAjBI;AAAA;AAAA;AAAA;;AAAA,+CAkBHhB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAW;AAAb,eAArB,CAlBG;;AAAA;AAoBZN,cAAAA,GAAG,CAACkB,IAAJ,GAAW;AAAEC,gBAAAA,EAAE,EAAEP,OAAO,CAACI;AAAd,eAAX;AACAd,cAAAA,IAAI;AArBQ;AAAA;;AAAA;AAAA;AAAA;AAAA,+CAuBLD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,aAvBK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAlB;eA4BeR,S",
      "sourceRoot": "/home/duong/Documents/database_project/src/Auth",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport db from '../db'; \n\nconst Authadmin = {\n  /**\n   * Verify Token\n   * @param {object} req \n   * @param {object} res \n   * @param {object} next\n   * @returns {object|void} response object \n   */\n  async verifyToken(req, res, next) {\n    const token = req.headers['x-access-token'];\n    if(!token) {\n      return res.status(400).send({ 'message': 'Token is not provided' });\n    }\n    try {\n      const decoded = await jwt.verify(token, process.env.SECRET);\n      const text = 'SELECT * FROM admin WHERE id = $1';\n      const { rows } = await db.query(text, [decoded.userId]);\n      if(!rows[0]) {\n        return res.status(400).send({ 'message': 'The token you provided is invalid' });\n      }\n      req.user = { id: decoded.userId };\n      next();\n    } catch(error) {\n      return res.status(400).send(error);\n    }\n  }\n}\n\nexport default Authadmin;"
      ]
    },
    "sourceType": "script",
    "mtime": 1558361771033
  }
}